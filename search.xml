<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java算法与数据结构之栈</title>
    <url>/2020/02/14/Stack/</url>
    <content><![CDATA[<h1 id="栈（Stack）"><a href="#栈（Stack）" class="headerlink" title="栈（Stack）"></a>栈（Stack）</h1><blockquote>
<p>队列是先进先出的数据结构，即FIFO原则，而栈是一种后进先出的数据结构</p>
</blockquote>
<p><img src="/2020/02/14/Stack/stack1.jpg" alt></p>
<h2 id="1、栈的特性"><a href="#1、栈的特性" class="headerlink" title="1、栈的特性"></a>1、栈的特性</h2><ul>
<li><p>“先入后出”（FILO）原则</p>
</li>
<li><p>栈是限制线性表中元素的插入和删除只能在线性表的同一端进行的一种特殊线性表。只允许进行插入和删除操作，允许插入和删除的一端，为变化的一端，称为栈顶（Top）,另一端为固定的一端，称为栈底（Bottom）。</p>
</li>
<li><p>根据栈的定义可知，最先放入栈中元素在栈底，最后放入的元素在栈顶，而删除元素刚好相反，最后放入的元素最先删除，最先放入的元素最后删除</p>
</li>
</ul>
<h2 id="2、栈的应用"><a href="#2、栈的应用" class="headerlink" title="2、栈的应用"></a>2、栈的应用</h2><ol>
<li>子程序的调用：在跳往子程序前，会先将下个指令的地址存到堆栈中，直到子程序执行完后再将地址取出，以回到原来的程序中。 </li>
<li>处理递归调用：和子程序的调用类似，只是除了储存下一个指令的地址外，也将参数、区域变量等数据存入堆栈中。</li>
<li>表达式的转换[中缀表达式转后缀表达式]与求值。</li>
<li>二叉树的遍历。</li>
<li>图形的深度优先(depth一first)搜索法。</li>
<li>浏览器的前进和后退功能</li>
</ol>
<h2 id="3、栈的实现"><a href="#3、栈的实现" class="headerlink" title="3、栈的实现"></a>3、栈的实现</h2><blockquote>
<p>栈既可以用数组来实现，也可以用链表来实现。用数组实现的栈，我们叫作<strong>顺序栈</strong>，用链表实现的栈，我们叫作<strong>链式栈</strong>。</p>
</blockquote>
<h3 id="（1）数组模拟栈"><a href="#（1）数组模拟栈" class="headerlink" title="（1）数组模拟栈"></a>（1）数组模拟栈</h3><p><strong>思路：</strong></p>
<ol>
<li>使用数组来模拟栈</li>
<li>定义一个 top 来表示栈顶，初始化 为 -1</li>
<li>入栈（push）的操作，当有数据加入到栈时， top++; stack[top] = data;</li>
<li>出栈（pop）的操作， int value = stack[top]; top–, return value</li>
<li>当 top = -1; 栈空</li>
<li>当 top = maxSize - 1; 栈满</li>
</ol>
<p><strong>代码实现：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArraryDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//测试栈</span></span><br><span class="line">        ArrayStack stack = <span class="keyword">new</span> ArrayStack(<span class="number">4</span>);</span><br><span class="line">        String key = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">boolean</span> loop = <span class="keyword">true</span>;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (loop) &#123;</span><br><span class="line">            System.out.println(<span class="string">"show: 显示栈"</span>);</span><br><span class="line">            System.out.println(<span class="string">"exit: 退出程序"</span>);</span><br><span class="line">            System.out.println(<span class="string">"push: 入栈"</span>);</span><br><span class="line">            System.out.println(<span class="string">"pop: 出栈"</span>);</span><br><span class="line">            System.out.println(<span class="string">"请选择"</span>);</span><br><span class="line">            key = scanner.next();</span><br><span class="line">            <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"show"</span>:</span><br><span class="line">                    stack.list();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"exit"</span>:</span><br><span class="line">                    scanner.close();</span><br><span class="line">                    loop = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"push"</span>:</span><br><span class="line">                    System.out.println(<span class="string">"请输入添加的数据"</span>);</span><br><span class="line">                    <span class="keyword">int</span> value = scanner.nextInt();</span><br><span class="line">                    stack.push(value);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"pop"</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">int</span> res = stack.pop();</span><br><span class="line">                        System.out.println(<span class="string">"出栈的数据为"</span> + res);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"程序退出"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个ArrayStack栈</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArrayStack</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxSize; <span class="comment">//栈的大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> [] stack; <span class="comment">//数组模拟栈，数据就放在该数组</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> top = -<span class="number">1</span>; <span class="comment">//top表示栈顶</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayStack</span><span class="params">(<span class="keyword">int</span> maxSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.maxSize = maxSize;</span><br><span class="line">        stack = <span class="keyword">new</span> <span class="keyword">int</span>[maxSize];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断栈满</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFull</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> top == maxSize - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断栈空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> top == -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//入栈push</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//先判断栈满</span></span><br><span class="line">        <span class="keyword">if</span> (isFull()) &#123;</span><br><span class="line">            System.out.println(<span class="string">"栈满"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        top++;</span><br><span class="line">        stack[top] = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//出栈pop</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断栈空</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"栈空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> value = stack[top];</span><br><span class="line">        top--;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//遍历栈，遍历时，需要从栈顶开始显示数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">list</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            System.out.println(<span class="string">"栈空"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = top; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            System.out.println(<span class="string">"stack["</span> + i + <span class="string">"] = "</span> + stack[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="（2）链表模拟战"><a href="#（2）链表模拟战" class="headerlink" title="（2）链表模拟战"></a>（2）链表模拟战</h3><p><strong>思路：</strong></p>
<ol>
<li><p>定义一个节点类Node</p>
</li>
<li><p>定义一个头节点 head 表示栈底</p>
</li>
<li><p>入栈（push）的操作，当有数据加入到栈时， 找到栈尾，temp.next = newNode;;</p>
</li>
<li><p>出栈（pop）的操作，遍历到链表尾部的前一个节点，然后将最后一个节点数据返回，并删除最后一个节点</p>
<p>int value = temp.next.data; temp.next = null;  return value;</p>
</li>
<li><p>当 head.next == null; 栈空</p>
</li>
</ol>
<p><strong>代码实现</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedListStackDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//测试栈</span></span><br><span class="line">        LinkedListStack stack = <span class="keyword">new</span> LinkedListStack();</span><br><span class="line">        String key = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">boolean</span> loop = <span class="keyword">true</span>;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (loop) &#123;</span><br><span class="line">            System.out.println(<span class="string">"show: 显示栈"</span>);</span><br><span class="line">            System.out.println(<span class="string">"exit: 退出程序"</span>);</span><br><span class="line">            System.out.println(<span class="string">"push: 入栈"</span>);</span><br><span class="line">            System.out.println(<span class="string">"pop: 出栈"</span>);</span><br><span class="line">            System.out.println(<span class="string">"请选择"</span>);</span><br><span class="line">            key = scanner.next();</span><br><span class="line">            <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"show"</span>:</span><br><span class="line">                    stack.list();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"exit"</span>:</span><br><span class="line">                    scanner.close();</span><br><span class="line">                    loop = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"push"</span>:</span><br><span class="line">                    System.out.println(<span class="string">"请输入添加的数据"</span>);</span><br><span class="line">                    <span class="keyword">int</span> value = scanner.nextInt();</span><br><span class="line">                    stack.push(value);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"pop"</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">int</span> res = stack.pop();</span><br><span class="line">                        System.out.println(<span class="string">"出栈的数据为"</span> + res);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"程序退出"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个LinkedList栈</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LinkedListStack</span> </span>&#123;</span><br><span class="line">    <span class="comment">//初始化一个头节点</span></span><br><span class="line">    <span class="keyword">private</span> Node head = <span class="keyword">new</span> Node(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断栈空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> head.next == <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//入栈</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> data)</span> </span>&#123;</span><br><span class="line">        Node newNode = <span class="keyword">new</span> Node(data);</span><br><span class="line">        <span class="comment">//定义一个辅助节点</span></span><br><span class="line">        Node temp = head;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">//找到链表尾部</span></span><br><span class="line">            <span class="keyword">if</span> (temp.next == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//temp后移</span></span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        temp.next = newNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//出栈</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"栈空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Node temp = head;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">//找到链表尾部的前一个节点</span></span><br><span class="line">            <span class="keyword">if</span> (temp.next.next == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//temp后移</span></span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//得到最后一个节点的值，即栈顶的值</span></span><br><span class="line">        <span class="comment">//删除最后一个节点，即最后一个节点的前一个节点指向为 null</span></span><br><span class="line">        <span class="keyword">int</span> value = temp.next.data;</span><br><span class="line">        temp.next = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示栈, 为了简洁点，从链头开始显示</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">list</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断链表是否为空</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            System.out.println(<span class="string">"链表为空"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//因为头节点不能动，所以需要一个辅助遍历temp</span></span><br><span class="line">        Node temp = head.next;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//输出节点信息</span></span><br><span class="line">            System.out.println(temp.data);</span><br><span class="line">            <span class="comment">//将next后移</span></span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个Node节点类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> data;</span><br><span class="line">    <span class="keyword">public</span> Node next;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(<span class="keyword">int</span> data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java算法与数据结构</category>
      </categories>
      <tags>
        <tag>算法与数据结构</tag>
        <tag>栈</tag>
      </tags>
  </entry>
  <entry>
    <title>Java算法与数据结构之单向环形链表</title>
    <url>/2020/02/13/CircleLinkedList/</url>
    <content><![CDATA[<h1 id="单向环形链表"><a href="#单向环形链表" class="headerlink" title="单向环形链表"></a>单向环形链表</h1><h2 id="循环链表"><a href="#循环链表" class="headerlink" title="循环链表"></a>循环链表</h2><blockquote>
<p>循环链表跟单链表的区在尾结点指针是指向链表的头结点。和单链表相比，循环链表的优点是从链尾到链头比较方便。当要处理的数据具有环型结构特点时，采用循环链表实现代码会简洁很多。</p>
</blockquote>
<p><img src="/2020/02/13/CircleLinkedList/circlelinkedlist1.jpg" alt></p>
<h2 id="Josephu问题"><a href="#Josephu问题" class="headerlink" title="Josephu问题"></a>Josephu问题</h2><blockquote>
<p>N个人坐成一个圆环（编号为1 - N），从第1个人开始报数✋，数到K的人出列，后面的人重新从1开始报数。问最后剩下的人的编号。</p>
</blockquote>
<p>👉<strong>思路：</strong></p>
<blockquote>
<p>用一个不带头结点的循环链表来处理Josephu 问题：先构成一个有n个结点的单循环链表，然后由k结点起从1开始计数，计到m时，对应结点从链表中删除，然后再从被删除结点的下一个结点又从1开始计数，直到最后一个结点从链表中删除算法结束。</p>
</blockquote>
<h2 id="约瑟夫环-51Nod-1073"><a href="#约瑟夫环-51Nod-1073" class="headerlink" title="约瑟夫环  51Nod - 1073"></a>约瑟夫环  51Nod - 1073</h2><p>例如：N = 3，K = 2。2号先出列，然后是1号，最后剩下的是3号。</p>
<p><strong>Input</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2个数N和K，表示N个人，数到K出列。(2 &lt;&#x3D; N, K &lt;&#x3D; 10^6)</span><br></pre></td></tr></table></figure>

<p>Output</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">最后剩下的人的编号</span><br></pre></td></tr></table></figure>

<p>Sample Input</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 2</span><br></pre></td></tr></table></figure>

<p>Sample Output</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<p>对于这道OJ题可以通过递归的方法，找到其中的规律便可AC，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = scanner.nextInt();</span><br><span class="line">        <span class="keyword">int</span> k = scanner.nextInt();</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            ans = (ans + k) % i;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(ans + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>👉以此题为例，使用单项循环链表的方式实现，<code>但是不能作为此题AC的代码，会超时！</code>思路如下：</p>
<blockquote>
<p>首先构建一个单向的环形链表</p>
</blockquote>
<ol>
<li>先创建第一个节点, 让 first 指向该节点，并形成环形⚪</li>
<li>后面当我们每创建一个新的节点，就把该节点，加入到已有的环形链表中即可.f</li>
</ol>
<blockquote>
<p>然后进行报数出圈</p>
</blockquote>
<ol>
<li>需要创建一个辅助指针(变量) helper , 首先让其指向环形链表的最后这个节点</li>
<li>当开始报数时，让first 和 helper 指针同时 的移动  k  - 1 次 🐌🐌</li>
<li>这时就可以将first 指向的节点 出圈<br>first = first .next<br>helper.next = first </li>
<li>然后直到圈内只有最后一个人，即最后一个节点的时候（first == helper）结束循环🔄</li>
<li>最后的first中的编号即为最后一个人的编号</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = scanner.nextInt();</span><br><span class="line">        <span class="keyword">int</span> k = scanner.nextInt();</span><br><span class="line">        addNode(n);</span><br><span class="line">        countNode(n, k);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Node first = <span class="keyword">null</span>; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addNode</span><span class="params">(<span class="keyword">int</span> nums)</span> </span>&#123;</span><br><span class="line">        Node current = <span class="keyword">null</span>; <span class="comment">// 辅助指针</span></span><br><span class="line">        <span class="comment">//创建一个循环链表</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= nums; i++) &#123;</span><br><span class="line">            Node node = <span class="keyword">new</span> Node(i);</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">1</span>) &#123; <span class="comment">//first指向第一个孩子</span></span><br><span class="line">                first = node;</span><br><span class="line">                first.next = first;</span><br><span class="line">                current = first; <span class="comment">//</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                current.next = node;</span><br><span class="line">                node.next = first;</span><br><span class="line">                current = node;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">countNode</span><span class="params">(<span class="keyword">int</span> nums, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个辅助指针helper</span></span><br><span class="line">        Node helper = first;</span><br><span class="line">        <span class="comment">//需要创建一个辅助指针helper，事先应该指向环形链表的最后这个节点</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (helper.next == first) &#123; <span class="comment">//说明helper指向最后一个节点</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            helper = helper.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//当报数时，让first 和 helper指针同时移动 k- 1次，然后出圈</span></span><br><span class="line">        <span class="comment">//这是一个循环操作，直到圈中只有一个节点</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (first == helper) &#123;<span class="comment">//说明圈中只有一个节点</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k - <span class="number">1</span>; i++) &#123;</span><br><span class="line">                first = first.next;</span><br><span class="line">                helper = helper.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//这是first指向的节点，就是要出圈的节点</span></span><br><span class="line">            first = first.next;</span><br><span class="line">            helper.next = first;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(first.no);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个Node节点类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> no;</span><br><span class="line">    <span class="keyword">public</span> Node next;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(<span class="keyword">int</span> no)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.no = no;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java算法与数据结构</category>
      </categories>
      <tags>
        <tag>链表</tag>
        <tag>Java算法与数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>Java算法与数据结构之链表</title>
    <url>/2020/02/12/LinkedList/</url>
    <content><![CDATA[<h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1><h2 id="一、链表介绍"><a href="#一、链表介绍" class="headerlink" title="一、链表介绍"></a>一、链表介绍</h2><ol>
<li>链表是以节点的方式来存储,是链式存储</li>
<li>每个节点包含 data 域， next 域：指向下一个节点.</li>
<li>如图：发现链表的各个节点不一定是连续存储.</li>
<li>链表分带头节点的链表和没有头节点的链表，根据实际的需求来确定</li>
</ol>
<h3 id="单链表"><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h3><blockquote>
<p>链表通过指针将一组零散的内存块串联在一起，内存块称为链表的“结点”。每个链表的结点除了存储数据之外，还需要记录链上的下一个结点的地址，叫作后继指针 next。链表有两个特殊的结点，分别是第一个结点（头结点）和最后一个结点（尾结点）。头结点用来记录链表的基地址，用它可以遍历得到整条链表。尾结点指向一个空地址 NULL，表示这是链表上最后一个结点。</p>
</blockquote>
<h3 id="双向链表"><a href="#双向链表" class="headerlink" title="双向链表"></a>双向链表</h3><blockquote>
<p>双向链表支持两个方向，每个结点同时有后继指针 next 指向后面的结点，还有一个前驱指针 pre 指向前面的结点。双向链表需要额外的两个空间来存储后继结点和前驱结点的地址，存储同样的数据，双向链表要比单链表占用更多的内存空间。</p>
</blockquote>
<h3 id="循环链表"><a href="#循环链表" class="headerlink" title="循环链表"></a>循环链表</h3><blockquote>
<p>循环链表跟单链表的区在尾结点指针是指向链表的头结点。和单链表相比，循环链表的优点是从链尾到链头比较方便。当要处理的数据具有环型结构特点时，采用循环链表实现代码会简洁很多。</p>
</blockquote>
<p><strong>内存结构图</strong></p>
<p><img src="/2020/02/12/LinkedList/linkedlist1.png" alt></p>
<p><strong>单链表(带头结点) 逻辑结构图</strong></p>
<p><img src="/2020/02/12/LinkedList/linkedlist2.png" alt></p>
<h2 id="二、单链表应用实例"><a href="#二、单链表应用实例" class="headerlink" title="二、单链表应用实例"></a>二、单链表应用实例</h2><blockquote>
<p>使用head头的单链表实现对水浒传英雄的增删改查等操作</p>
</blockquote>
<p><strong>测试类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleLinkedListDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//进行测试</span></span><br><span class="line">        <span class="comment">//创建节点</span></span><br><span class="line">        HeroNode hero1 = <span class="keyword">new</span> HeroNode(<span class="number">1</span>, <span class="string">"宋江"</span>, <span class="string">"及时雨"</span>);</span><br><span class="line">        HeroNode hero2 = <span class="keyword">new</span> HeroNode(<span class="number">2</span>, <span class="string">"卢俊义"</span>, <span class="string">"玉麒麟"</span>);</span><br><span class="line">        HeroNode hero3 = <span class="keyword">new</span> HeroNode(<span class="number">3</span>, <span class="string">"吴用"</span>, <span class="string">"智多星"</span>);</span><br><span class="line">        HeroNode hero4 = <span class="keyword">new</span> HeroNode(<span class="number">4</span>, <span class="string">"林冲"</span>, <span class="string">"豹子头"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建</span></span><br><span class="line">        SingleLinkedList singleLinkedList = <span class="keyword">new</span> SingleLinkedList();</span><br><span class="line"><span class="comment">//        singleLinkedList.add(hero1);</span></span><br><span class="line"><span class="comment">//        singleLinkedList.add(hero2);</span></span><br><span class="line"><span class="comment">//        singleLinkedList.add(hero3);</span></span><br><span class="line"><span class="comment">//        singleLinkedList.add(hero4);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据编号顺序添加</span></span><br><span class="line">        singleLinkedList.addByOrder(hero1);</span><br><span class="line">        singleLinkedList.addByOrder(hero4);</span><br><span class="line">        singleLinkedList.addByOrder(hero3);</span><br><span class="line">        singleLinkedList.addByOrder(hero2);</span><br><span class="line"></span><br><span class="line">        singleLinkedList.list();</span><br><span class="line">        <span class="comment">//测试修改节点的代码</span></span><br><span class="line">        System.out.println(<span class="string">"修改2号："</span>);</span><br><span class="line">        HeroNode newHeroNode = <span class="keyword">new</span> HeroNode(<span class="number">2</span>, <span class="string">"小卢"</span>, <span class="string">"玉麒麟。。。"</span>);</span><br><span class="line">        singleLinkedList.update(newHeroNode);</span><br><span class="line">        <span class="comment">//显示</span></span><br><span class="line">        System.out.println(<span class="string">"修改后情况！"</span>);</span><br><span class="line">        singleLinkedList.list();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//删除一个节点</span></span><br><span class="line">        System.out.println(<span class="string">"删除1号："</span>);</span><br><span class="line">        singleLinkedList.delete(<span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">"删除后的链表情况"</span>);</span><br><span class="line">        singleLinkedList.list();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="（1）添加节点"><a href="#（1）添加节点" class="headerlink" title="（1）添加节点"></a>（1）添加节点</h3><blockquote>
<p>第一种方式，直接添加到链表的尾部</p>
</blockquote>
<p><img src="/2020/02/12/LinkedList/linkedlist3.jpg" alt></p>
<blockquote>
<p>第二种方式，插入节点，可以根据排名插入到指定位置</p>
</blockquote>
<p>思路：</p>
<ol>
<li>需要按照编号的顺序添加</li>
<li>首先找到新添加的节点的位置, 是通过辅助变量(指针), 通过遍历来搞定</li>
<li>newNode.next = temp.next</li>
<li>将temp.next = newNode</li>
</ol>
<p><img src="/2020/02/12/LinkedList/linkedlist4.jpg" alt></p>
<h3 id="（2）删除节点"><a href="#（2）删除节点" class="headerlink" title="（2）删除节点"></a>（2）删除节点</h3><p>思路：</p>
<ol>
<li>我们先找到 需要删除的这个节点的前一个节点 temp</li>
<li>temp.next = temp.next.next</li>
<li>被删除的节点，将不会有其它引用指向，会被垃圾回收机制回收</li>
</ol>
<p><img src="/2020/02/12/LinkedList/linkedlist5.jpg" alt></p>
<h3 id="（3）修改节点"><a href="#（3）修改节点" class="headerlink" title="（3）修改节点"></a>（3）修改节点</h3><p>思路：</p>
<ol>
<li>通过遍历找到该节点，然后直接重新赋值</li>
<li>temp.data= newNode.data</li>
</ol>
<h3 id="（4）查询节点"><a href="#（4）查询节点" class="headerlink" title="（4）查询节点"></a>（4）查询节点</h3><p>链表的随机访问第 k 个元素，必须根据指针一个结点一个结点地依次遍历，直到找到相应的结点。</p>
<p>详细代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义一个SingleLinkedList 管理我们的英雄</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SingleLinkedList</span> </span>&#123;</span><br><span class="line">    <span class="comment">//先初始化一个头节点， 头节点不要动, 不存放具体数据</span></span><br><span class="line">    <span class="keyword">private</span> HeroNode head = <span class="keyword">new</span> HeroNode(<span class="number">0</span>, <span class="string">""</span>, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加节点到单项链表</span></span><br><span class="line">    <span class="comment">//思路，当不考虑编号顺序时</span></span><br><span class="line">    <span class="comment">//1.找到当前链表的最后节点</span></span><br><span class="line">    <span class="comment">//2.将最后这个节点的next 指向 新的节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(HeroNode heroNode)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//head节点不能动，因此需要一个辅助遍历temp</span></span><br><span class="line">        HeroNode temp = head;</span><br><span class="line">        <span class="comment">//遍历链表，找到最后</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">//找到链表最后</span></span><br><span class="line">            <span class="keyword">if</span> (temp.next == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果没有找到就把temp后移</span></span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//当退出while循环时，temp就指向了链表的最后</span></span><br><span class="line">        <span class="comment">//将最后这个节点的next 指向 新的节点</span></span><br><span class="line">        temp.next = heroNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//第二种方式在添加英雄时，根据排名将英雄插入到指定位置(如果有这个排名，则添加失败，并给出提示)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addByOrder</span> <span class="params">(HeroNode heroNode)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//通过一个辅助指针来帮助找到添加的位置</span></span><br><span class="line">        <span class="comment">//因为单链表，因为我们找的temp是位于添加位置的前一个节点，否则插入不了</span></span><br><span class="line">        HeroNode temp = head;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;<span class="comment">//标志添加的编号是否存在</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp.next == <span class="keyword">null</span>) &#123; <span class="comment">//说明temp已经在链表最后</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp.next.no &gt; heroNode.no) &#123; <span class="comment">//位置找到，就在temp的后面插入</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp.next.no == heroNode.no) &#123; <span class="comment">//添加的编号存在</span></span><br><span class="line">                flag = <span class="keyword">true</span>; <span class="comment">//编号存在</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断flag的值</span></span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            <span class="comment">//编号存在，不能添加</span></span><br><span class="line">            System.out.println(<span class="string">"准备插入的编号"</span> + heroNode.no +<span class="string">"已经存在了"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//插入到链表中，temp的后面</span></span><br><span class="line">            heroNode.next = temp.next;</span><br><span class="line">            temp.next = heroNode;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改节点的信息，根据no编号来修改</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(HeroNode newHeroNode)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断链表是否为空</span></span><br><span class="line">        <span class="keyword">if</span> (head.next == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"链表为空"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//找到需要修改的节点</span></span><br><span class="line">        HeroNode temp = head.next;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>; <span class="comment">//表示是否找到该节点</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>; <span class="comment">//已经遍历完链表</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp.no == newHeroNode.no) &#123;</span><br><span class="line">                <span class="comment">//找到</span></span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            temp.name = newHeroNode.name;</span><br><span class="line">            temp.nickname = newHeroNode.nickname;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//没有找到</span></span><br><span class="line">            System.out.println(<span class="string">"没有找到编号为"</span> +newHeroNode.no + <span class="string">"的节点"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除节点</span></span><br><span class="line">    <span class="comment">//思路</span></span><br><span class="line">    <span class="comment">//1.head 节点不动，需要一个temp辅助节点，找到待删除节点的前一个节点</span></span><br><span class="line">    <span class="comment">//2.说明我们在比较时，是temp.next.no和待删除的节点的no比较</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> no)</span> </span>&#123;</span><br><span class="line">        HeroNode temp = head;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp.next == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp.next.no == no) &#123;</span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            temp.next = temp.next.next;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"要删除的"</span>+ no +<span class="string">"这个节点不存在"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示链表</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">list</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断链表是否为空</span></span><br><span class="line">        <span class="keyword">if</span> (head.next == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"链表为空"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//因为头节点不能动，所以需要一个辅助遍历temp</span></span><br><span class="line">        HeroNode temp = head.next;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//输出节点信息</span></span><br><span class="line">            System.out.println(temp);</span><br><span class="line">            <span class="comment">//将next后移</span></span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义HeroNode，每个HeroNode 对象就是一个节点</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HeroNode</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> no;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> String nickname;</span><br><span class="line">    <span class="keyword">public</span> HeroNode next; <span class="comment">//指向下一个节点</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HeroNode</span> <span class="params">(<span class="keyword">int</span> no, String name, String nickname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.no = no;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.nickname = nickname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//重写toString</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"HeroNode [no = "</span>+ no +<span class="string">", name = "</span>+ name +<span class="string">", nickname = "</span>+ nickname +<span class="string">"]"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>效果展示：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">HeroNode [no = <span class="number">1</span>, name = 宋江, nickname = 及时雨]</span><br><span class="line">HeroNode [no = <span class="number">2</span>, name = 卢俊义, nickname = 玉麒麟]</span><br><span class="line">HeroNode [no = <span class="number">3</span>, name = 吴用, nickname = 智多星]</span><br><span class="line">HeroNode [no = <span class="number">4</span>, name = 林冲, nickname = 豹子头]</span><br><span class="line">修改<span class="number">2</span>号：</span><br><span class="line">修改后情况！</span><br><span class="line">HeroNode [no = <span class="number">1</span>, name = 宋江, nickname = 及时雨]</span><br><span class="line">HeroNode [no = <span class="number">2</span>, name = 卢, nickname = 玉麒麟]</span><br><span class="line">HeroNode [no = <span class="number">3</span>, name = 吴用, nickname = 智多星]</span><br><span class="line">HeroNode [no = <span class="number">4</span>, name = 林冲, nickname = 豹子头]</span><br><span class="line">删除<span class="number">1</span>号</span><br><span class="line">删除后的链表情况</span><br><span class="line">HeroNode [no = <span class="number">2</span>, name = 卢, nickname = 玉麒麟]</span><br><span class="line">HeroNode [no = <span class="number">3</span>, name = 吴用, nickname = 智多星]</span><br><span class="line">HeroNode [no = <span class="number">4</span>, name = 林冲, nickname = 豹子头]</span><br></pre></td></tr></table></figure>



<h2 id="三、双链表应用实例"><a href="#三、双链表应用实例" class="headerlink" title="三、双链表应用实例"></a>三、双链表应用实例</h2><h3 id="（1）添加节点-1"><a href="#（1）添加节点-1" class="headerlink" title="（1）添加节点"></a>（1）添加节点</h3><blockquote>
<p>第一种方式，添加到尾部</p>
</blockquote>
<p>思路：</p>
<ol>
<li>先找到双向链表的最后这个节点temp</li>
<li>temp.next = newNode</li>
<li>newNode.pre = temp;</li>
</ol>
<blockquote>
<p>第二种方式，插入节点，可以根据排名插入到指定位置</p>
</blockquote>
<p>思路：</p>
<ol>
<li><p>需要按照编号的顺序添加</p>
</li>
<li><p>首先找到新添加的节点的位置, 是通过辅助变量(指针), 通过遍历来搞定</p>
</li>
</ol>
<p>👉<code>需要注意下面代码的先后顺序</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">newNode.next = temp.next;</span><br><span class="line">   <span class="keyword">if</span> (temp.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">      temp.next.pre = newNode;</span><br><span class="line">   &#125;</span><br><span class="line">   temp.next = newNode;</span><br><span class="line">   newNode.pre = temp;</span><br></pre></td></tr></table></figure>



<p><img src="/2020/02/12/LinkedList/linkerlist6.jpg" alt></p>
<h3 id="（2）删除节点-1"><a href="#（2）删除节点-1" class="headerlink" title="（2）删除节点"></a>（2）删除节点</h3><p>思路：</p>
<ol>
<li>因为是双向链表，因此，我们可以实现自我删除某个节点</li>
<li>直接找到要删除的这个节点，比如temp</li>
<li>temp.pre.next = temp.next</li>
<li>temp.next.pre = temp.pre;</li>
</ol>
<p><img src="/2020/02/12/LinkedList/linkedlist7.jpg" alt></p>
<h3 id="（3）修改节点-1"><a href="#（3）修改节点-1" class="headerlink" title="（3）修改节点"></a>（3）修改节点</h3><p>👉双链表修改节点思路和单链表思路一样</p>
<h3 id="（4）遍历节点"><a href="#（4）遍历节点" class="headerlink" title="（4）遍历节点"></a>（4）遍历节点</h3><p>👉遍历方式和单链表一样，可以向前遍历也可以向后遍历</p>
<p><strong>代码实现如下：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DoubleLinkedListDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"双向链表"</span>);</span><br><span class="line">        <span class="comment">//创建节点</span></span><br><span class="line">        HeroNode2 hero1 = <span class="keyword">new</span> HeroNode2(<span class="number">1</span>, <span class="string">"宋江"</span>, <span class="string">"及时雨"</span>);</span><br><span class="line">        HeroNode2 hero2 = <span class="keyword">new</span> HeroNode2(<span class="number">2</span>, <span class="string">"卢俊义"</span>, <span class="string">"玉麒麟"</span>);</span><br><span class="line">        HeroNode2 hero3 = <span class="keyword">new</span> HeroNode2(<span class="number">3</span>, <span class="string">"吴用"</span>, <span class="string">"智多星"</span>);</span><br><span class="line">        HeroNode2 hero4 = <span class="keyword">new</span> HeroNode2(<span class="number">4</span>, <span class="string">"林冲"</span>, <span class="string">"豹子头"</span>);</span><br><span class="line"></span><br><span class="line">        DoubleLinkedList doubleLinkedList = <span class="keyword">new</span> DoubleLinkedList();</span><br><span class="line"><span class="comment">//        doubleLinkedList.add(hero1);</span></span><br><span class="line"><span class="comment">//        doubleLinkedList.add(hero2);</span></span><br><span class="line"><span class="comment">//        doubleLinkedList.add(hero3);</span></span><br><span class="line"><span class="comment">//        doubleLinkedList.add(hero4);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据编号顺序添加</span></span><br><span class="line">        doubleLinkedList.addByOrder(hero1);</span><br><span class="line">        doubleLinkedList.addByOrder(hero4);</span><br><span class="line">        doubleLinkedList.addByOrder(hero3);</span><br><span class="line">        doubleLinkedList.addByOrder(hero2);</span><br><span class="line">        doubleLinkedList.list();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"修改4号"</span>);</span><br><span class="line">        HeroNode2 newHeroNode = <span class="keyword">new</span> HeroNode2(<span class="number">4</span>, <span class="string">"林冲..."</span>, <span class="string">"豹子..."</span>);</span><br><span class="line">        doubleLinkedList.update(newHeroNode);</span><br><span class="line">        System.out.println(<span class="string">"修改后："</span>);</span><br><span class="line">        doubleLinkedList.list();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"删除吴用"</span>);</span><br><span class="line">        doubleLinkedList.delete(<span class="number">3</span>);</span><br><span class="line">        System.out.println(<span class="string">"删除后："</span>);</span><br><span class="line">        doubleLinkedList.list();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubleLinkedList</span> </span>&#123;</span><br><span class="line">    <span class="comment">//先初始化一个头节点， 头节点不要动, 不存放具体数据</span></span><br><span class="line">    <span class="keyword">private</span> HeroNode2 head = <span class="keyword">new</span> HeroNode2(<span class="number">0</span>, <span class="string">""</span>, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HeroNode2 <span class="title">getHead</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加一个节点到双向链表的最后</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(HeroNode2 heroNode)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//head节点不能动，因此需要一个辅助遍历temp</span></span><br><span class="line">        HeroNode2 temp = head;</span><br><span class="line">        <span class="comment">//遍历链表，找到最后</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">//找到链表最后</span></span><br><span class="line">            <span class="keyword">if</span> (temp.next == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果没有找到就把temp后移</span></span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//当退出while循环时，temp就指向了链表的最后</span></span><br><span class="line">        <span class="comment">//形成一个双向链表</span></span><br><span class="line">        temp.next = heroNode;</span><br><span class="line">        heroNode.pre = temp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//第二种方式在添加英雄时，根据排名将英雄插入到指定位置(如果有这个排名，则添加失败，并给出提示)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addByOrder</span> <span class="params">(HeroNode2 heroNode)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//通过一个辅助指针来帮助找到添加的位置</span></span><br><span class="line">        <span class="comment">//因为单链表，因为我们找的temp是位于添加位置的前一个节点，否则插入不了</span></span><br><span class="line">        HeroNode2 temp = head;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;<span class="comment">//标志添加的编号是否存在</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp.next == <span class="keyword">null</span>) &#123; <span class="comment">//说明temp已经在链表最后</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp.next.no &gt; heroNode.no) &#123; <span class="comment">//位置找到，就在temp的后面插入</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp.next.no == heroNode.no) &#123; <span class="comment">//添加的编号存在</span></span><br><span class="line">                flag = <span class="keyword">true</span>; <span class="comment">//编号存在</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断flag的值</span></span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            <span class="comment">//编号存在，不能添加</span></span><br><span class="line">            System.out.println(<span class="string">"准备插入的编号"</span> + heroNode.no +<span class="string">"已经存在了"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//插入到链表中，temp的后面</span></span><br><span class="line">            <span class="comment">//这里格外要注意下面的先后顺序</span></span><br><span class="line">            heroNode.next = temp.next;</span><br><span class="line">            <span class="keyword">if</span> (temp.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">                temp.next.pre = heroNode;</span><br><span class="line">            &#125;</span><br><span class="line">            temp.next = heroNode;</span><br><span class="line">            heroNode.pre = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改节点的信息，根据no编号来修改，和单项链表一样</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(HeroNode2 newHeroNode)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断链表是否为空</span></span><br><span class="line">        <span class="keyword">if</span> (head.next == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"链表为空"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//找到需要修改的节点</span></span><br><span class="line">        HeroNode2 temp = head.next;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>; <span class="comment">//表示是否找到该节点</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>; <span class="comment">//已经遍历完链表</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp.no == newHeroNode.no) &#123;</span><br><span class="line">                <span class="comment">//找到</span></span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            temp.name = newHeroNode.name;</span><br><span class="line">            temp.nickname = newHeroNode.nickname;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//没有找到</span></span><br><span class="line">            System.out.println(<span class="string">"没有找到编号为"</span> +newHeroNode.no + <span class="string">"的节点"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除节点</span></span><br><span class="line">    <span class="comment">//思路</span></span><br><span class="line">    <span class="comment">// 1. 因为是双向链表，因此，我们可以实现自我删除某个节点</span></span><br><span class="line">    <span class="comment">//2. 直接找到要删除的这个节点，比如temp</span></span><br><span class="line">    <span class="comment">//3. temp.pre.next = temp.next</span></span><br><span class="line">    <span class="comment">//4. temp.next.pre = temp.pre;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> no)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head.next == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"链表为空，无法删除"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        HeroNode2 temp = head.next; <span class="comment">//辅助变量</span></span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp.no == no) &#123;</span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            temp.pre.next = temp.next;</span><br><span class="line">            <span class="comment">//如果是最后一个节点，就不需要执行下面这句话，否则出现空指针</span></span><br><span class="line">            <span class="keyword">if</span> (temp.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">                temp.next.pre = temp.pre;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"要删除的"</span>+ no +<span class="string">"这个节点不存在"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示链表,遍历链表</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">list</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断链表是否为空</span></span><br><span class="line">        <span class="keyword">if</span> (head.next == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"链表为空"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//因为头节点不能动，所以需要一个辅助遍历temp</span></span><br><span class="line">        HeroNode2 temp = head.next;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//输出节点信息</span></span><br><span class="line">            System.out.println(temp);</span><br><span class="line">            <span class="comment">//将next后移</span></span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义HeroNode2，每个HeroNode 对象就是一个节点</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HeroNode2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> no;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> String nickname;</span><br><span class="line">    <span class="keyword">public</span> HeroNode2 next; <span class="comment">//指向下一个节点</span></span><br><span class="line">    <span class="keyword">public</span> HeroNode2 pre; <span class="comment">//指向前一个节点</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HeroNode2</span> <span class="params">(<span class="keyword">int</span> no, String name, String nickname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.no = no;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.nickname = nickname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//重写toString</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"HeroNode [no = "</span>+ no +<span class="string">", name = "</span>+ name +<span class="string">", nickname = "</span>+ nickname +<span class="string">"]"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>实现效果</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">双向链表</span><br><span class="line">HeroNode [no = <span class="number">1</span>, name = 宋江, nickname = 及时雨]</span><br><span class="line">HeroNode [no = <span class="number">2</span>, name = 卢俊义, nickname = 玉麒麟]</span><br><span class="line">HeroNode [no = <span class="number">3</span>, name = 吴用, nickname = 智多星]</span><br><span class="line">HeroNode [no = <span class="number">4</span>, name = 林冲, nickname = 豹子头]</span><br><span class="line">修改<span class="number">4</span>号</span><br><span class="line">修改后：</span><br><span class="line">HeroNode [no = <span class="number">1</span>, name = 宋江, nickname = 及时雨]</span><br><span class="line">HeroNode [no = <span class="number">2</span>, name = 卢俊义, nickname = 玉麒麟]</span><br><span class="line">HeroNode [no = <span class="number">3</span>, name = 吴用, nickname = 智多星]</span><br><span class="line">HeroNode [no = <span class="number">4</span>, name = 林冲..., nickname = 豹子...]</span><br><span class="line">删除吴用</span><br><span class="line">删除后：</span><br><span class="line">HeroNode [no = <span class="number">1</span>, name = 宋江, nickname = 及时雨]</span><br><span class="line">HeroNode [no = <span class="number">2</span>, name = 卢俊义, nickname = 玉麒麟]</span><br><span class="line">HeroNode [no = <span class="number">4</span>, name = 林冲..., nickname = 豹子...]</span><br></pre></td></tr></table></figure>

<h2 id="四、单向环形链表应用场景"><a href="#四、单向环形链表应用场景" class="headerlink" title="四、单向环形链表应用场景"></a>四、单向环形链表应用场景</h2><blockquote>
<p>Josephu（约瑟夫、约瑟夫环）问题</p>
</blockquote>
<p>详细可以看这篇 </p>
<p><a href="https://mr00wang.github.io/2020/02/13/CircleLinkedList/#more">单向环形链表和Josephu</a></p>
<p>加油！！！😘😘</p>]]></content>
      <categories>
        <category>Java算法与数据结构</category>
      </categories>
      <tags>
        <tag>链表</tag>
        <tag>Java算法与数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>Java算法与数据结构之队列</title>
    <url>/2020/02/05/Queue/</url>
    <content><![CDATA[<h1 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h1><blockquote>
<p>队列是一种特殊的线性结构，它只允许在队列的首部（head/front）进行删除操作，这称为“出队”，而在队列的尾部（tail/rear）进行插入操作，这称为“入队”。当队列中没有元素时（即head == tail），称为空队列。比如买票，每个排队买票的窗口就是一个队列。在这个队列当中，新来的人总是站在队列的最后面，来得越早的人越靠前，也就是越早能买到票，我们称为“先进先出”（First In First Out, FIFO）原则。🚘</p>
</blockquote>
<h2 id="队列的特性"><a href="#队列的特性" class="headerlink" title="队列的特性"></a>队列的特性</h2><ul>
<li>队列是一个有序列表，可以用<strong>数组</strong>或是<strong>链表</strong>来实现</li>
<li>在队首删除元素，在队尾插入元素</li>
<li>“先进先出”（FIFO）原则</li>
</ul>
<h2 id="队列的实现"><a href="#队列的实现" class="headerlink" title="队列的实现"></a>队列的实现</h2><blockquote>
<p>用数组实现的队列叫作<strong>顺序队列</strong>，用链表实现的队列叫作<strong>链式队列</strong>。</p>
</blockquote>
<h3 id="数组模拟队列"><a href="#数组模拟队列" class="headerlink" title="数组模拟队列"></a>数组模拟队列</h3><ul>
<li><p>队列本身是有序列表，若使用数组的结构来存储队列的数据，则队列数组的声明如下图, 其中 maxSize 是该队列的最大容量。</p>
</li>
<li><p>因为队列的输出、输入是分别从前后端来处理，因此需要两个变量 front及rear分别记录队列前后端的下标，front 会随着数据输出而改变，而 rear则是随着数据输入而改变，如图所示:</p>
</li>
</ul>
<p><img src="/2020/02/05/Queue/queue.png" alt></p>
<ul>
<li>数组模拟队列的数组使用一次便不可使用，即使数组还有空闲空间，也无法往队列里添加，这是就需要进行数据的搬移，复用性不好，可以替换为环形队列。</li>
</ul>
<p><strong>代码实现</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayQueueTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//测试</span></span><br><span class="line">        <span class="comment">//创建一个队列</span></span><br><span class="line">        ArrayQueue queue = <span class="keyword">new</span> ArrayQueue(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">char</span> key = <span class="string">' '</span>;<span class="comment">//接受用户输入</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">boolean</span> loop = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">while</span>(loop) &#123;</span><br><span class="line">            System.out.println(<span class="string">"(s)show: 显示队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"(e)exit: 退出程序"</span>);</span><br><span class="line">            System.out.println(<span class="string">"(a)add: 添加数据到队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"(g)get: 从队列取出数据"</span>);</span><br><span class="line">            System.out.println(<span class="string">"(h)head: 查看队列头的数据"</span>);</span><br><span class="line">            key = scanner.next().charAt(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">                    queue.showQueue();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">                    System.out.println(<span class="string">"输入一个数："</span>);</span><br><span class="line">                    <span class="keyword">int</span> value = scanner.nextInt();</span><br><span class="line">                    queue.addQueue(value);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'g'</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">int</span> res = queue.getQueue();</span><br><span class="line">                        System.out.println(<span class="string">"取出的数据是"</span> + res);</span><br><span class="line">                    &#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'h'</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">int</span> res = queue.headQueue();</span><br><span class="line">                        System.out.println(<span class="string">"队列头的数据是"</span> + res);</span><br><span class="line">                    &#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'e'</span>:</span><br><span class="line">                    scanner.close();</span><br><span class="line">                    loop = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"程序退出！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用数组模拟队列-编写一个ArrayQueue类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArrayQueue</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxSize; <span class="comment">//表示数组的最大容量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> front; <span class="comment">//队列头</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> rear; <span class="comment">// 队列尾</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] arr; <span class="comment">// 该数据用于存放数据，模拟队列</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建队列的构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayQueue</span><span class="params">(<span class="keyword">int</span> arrMaxSize)</span> </span>&#123;</span><br><span class="line">        maxSize = arrMaxSize;</span><br><span class="line">        arr = <span class="keyword">new</span> <span class="keyword">int</span>[maxSize];</span><br><span class="line">        front = -<span class="number">1</span>; <span class="comment">//指向队列头部，分析出front是指队列头的前一个位置</span></span><br><span class="line">        rear = -<span class="number">1</span>; <span class="comment">//指向队列尾，指向队列尾的数据（即就是队列最后一个数据）</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断队列是否满</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFull</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rear == maxSize - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断队列是否为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rear == front;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加数据到队列</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addQueue</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断队列是否满</span></span><br><span class="line">        <span class="keyword">if</span> (isFull()) &#123;</span><br><span class="line">            System.out.println(<span class="string">"队列满，不能加入数据"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        rear++; <span class="comment">// 让rear 后移</span></span><br><span class="line">        arr[rear] = n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取队列的数据，出队列</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断队列是否空</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="comment">//通过抛出异常</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列空，不能取数据"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        front++; <span class="comment">//front 后移</span></span><br><span class="line">        <span class="keyword">return</span> arr[front];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示队列的所有数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//遍历数组</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            System.out.println(<span class="string">"队列空"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.printf(<span class="string">"arr[%d]=%d\n"</span>,i, arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//显示队列的头数据，不是取出数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">headQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr[front + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<h3 id="链表模拟队列"><a href="#链表模拟队列" class="headerlink" title="链表模拟队列"></a>链表模拟队列</h3><blockquote>
<p>基于链表的实现，需要head 和 tail 两个指针。分别指向链表的第一个和最后一个结点。</p>
<p>入队时，tail-&gt;next= new_node, tail = tail-&gt;next；出队时，head = head-&gt;next。</p>
</blockquote>
<p><strong>图示如下：</strong></p>
<p><img src="/2020/02/05/Queue/queue2.jpg" alt></p>
<p><strong>代码如下：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedListQueueDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//测试</span></span><br><span class="line">        <span class="comment">//创建一个链表</span></span><br><span class="line">        LinkedListQueue queue = <span class="keyword">new</span> LinkedListQueue();<span class="comment">//设置的是有效数据</span></span><br><span class="line">        <span class="keyword">char</span> key = <span class="string">' '</span>;<span class="comment">//接受用户输入</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">boolean</span> loop = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">while</span>(loop) &#123;</span><br><span class="line">            System.out.println(<span class="string">"(s)show: 显示队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"(e)exit: 退出程序"</span>);</span><br><span class="line">            System.out.println(<span class="string">"(a)add: 添加数据到队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"(g)get: 从队列取出数据"</span>);</span><br><span class="line">            System.out.println(<span class="string">"(h)head: 查看队列头的数据"</span>);</span><br><span class="line">            key = scanner.next().charAt(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">                    queue.showQueue();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">                    System.out.println(<span class="string">"输入一个数："</span>);</span><br><span class="line">                    <span class="keyword">int</span> value = scanner.nextInt();</span><br><span class="line">                    queue.addQueue(value);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'g'</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Object res = queue.getQueue();</span><br><span class="line">                        System.out.println(<span class="string">"取出的数据是"</span> + res);</span><br><span class="line">                    &#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'h'</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Object res = queue.headQueue();</span><br><span class="line">                        System.out.println(<span class="string">"队列头的数据是"</span> + res);</span><br><span class="line">                    &#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'e'</span>:</span><br><span class="line">                    scanner.close();</span><br><span class="line">                    loop = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"程序退出！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用链表模拟队列-编写一个LinkedListQueue类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LinkedListQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Node front; <span class="comment">//链表头</span></span><br><span class="line">    <span class="keyword">private</span> Node rear; <span class="comment">//链表尾</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size; <span class="comment">//队列长度</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建队列的构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LinkedListQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        size = <span class="number">0</span>;</span><br><span class="line">        front = rear = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建一个Node节点类</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Node next; <span class="comment">//每一个节点</span></span><br><span class="line">        <span class="keyword">private</span> Object data;<span class="comment">//每个节点的数据</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(Object data, Node next)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.data = data;</span><br><span class="line">            <span class="keyword">this</span>.next = next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断队列是否为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加数据到队列,将新节点添加到表尾，然后把新节点设置成新的表尾</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addQueue</span><span class="params">(Object data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            Node newNode = <span class="keyword">new</span> Node(data, <span class="keyword">null</span>);</span><br><span class="line">            front = newNode;</span><br><span class="line">            rear = newNode;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            rear.next = <span class="keyword">new</span> Node(data, <span class="keyword">null</span>);</span><br><span class="line">            rear = rear.next;</span><br><span class="line">        &#125;</span><br><span class="line">        size++; <span class="comment">//队列长度加1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取队列的数据，出队列</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="comment">//通过抛出异常</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列空，不能取数据"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        Object value = front.data;</span><br><span class="line">        front = front.next;</span><br><span class="line">        <span class="keyword">if</span> (front == <span class="keyword">null</span>) &#123;</span><br><span class="line">            rear = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        size--;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示队列的所有数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            System.out.println(<span class="string">"队列空"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历链表所有数据</span></span><br><span class="line">        Node node = front;</span><br><span class="line">        <span class="keyword">while</span> (node != <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.print(node.data + <span class="string">"-&gt;"</span>);</span><br><span class="line">            node = node.next;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示队列的头数据，不是取出数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">headQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> front.data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="数组模拟环形队列"><a href="#数组模拟环形队列" class="headerlink" title="数组模拟环形队列"></a>数组模拟环形队列</h3><p><strong>思路如下:</strong></p>
<ul>
<li>front 变量的含义做一个调整： front 就指向队列的第一个元素, 也就是说 arr[front] 就是队列的第一个元素<br>front 的初始值 = 0</li>
<li>rear 变量的含义做一个调整：rear 指向队列的最后一个元素的后一个位置. 因为希望空出一个空间做为约定.<br>rear 的初始值 = 0</li>
<li>当队列满时，条件是  (rear  + 1) % maxSize == front 【满】</li>
<li>对队列为空的条件， rear == front 空</li>
<li>当我们这样分析， 队列中有效的数据的个数   (rear + maxSize - front) % maxSize   // rear = 1 front = 0 </li>
<li>我们就可以在原来的队列上修改得到，一个环形队列</li>
</ul>
<p><strong>代码实现</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CircleArrayDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//测试</span></span><br><span class="line">        <span class="comment">//创建一个环形队列</span></span><br><span class="line">        CircleQueue queue = <span class="keyword">new</span> CircleQueue(<span class="number">4</span>);<span class="comment">//设置的是有效数据</span></span><br><span class="line">        <span class="keyword">char</span> key = <span class="string">' '</span>;<span class="comment">//接受用户输入</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">boolean</span> loop = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">while</span>(loop) &#123;</span><br><span class="line">            System.out.println(<span class="string">"(s)show: 显示队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"(e)exit: 退出程序"</span>);</span><br><span class="line">            System.out.println(<span class="string">"(a)add: 添加数据到队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"(g)get: 从队列取出数据"</span>);</span><br><span class="line">            System.out.println(<span class="string">"(h)head: 查看队列头的数据"</span>);</span><br><span class="line">            key = scanner.next().charAt(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">                    queue.showQueue();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">                    System.out.println(<span class="string">"输入一个数："</span>);</span><br><span class="line">                    <span class="keyword">int</span> value = scanner.nextInt();</span><br><span class="line">                    queue.addQueue(value);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'g'</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">int</span> res = queue.getQueue();</span><br><span class="line">                        System.out.println(<span class="string">"取出的数据是"</span> + res);</span><br><span class="line">                    &#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'h'</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">int</span> res = queue.headQueue();</span><br><span class="line">                        System.out.println(<span class="string">"队列头的数据是"</span> + res);</span><br><span class="line">                    &#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'e'</span>:</span><br><span class="line">                    scanner.close();</span><br><span class="line">                    loop = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"程序退出！"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用数组模拟队列-编写一个CircleQueue类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CircleQueue</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxSize; <span class="comment">//表示数组的最大容量</span></span><br><span class="line">    <span class="comment">//front 变量的含义做一个调整： front 就指向队列的第一个元素, </span></span><br><span class="line">    <span class="comment">//也就是说 arr[front] 就是队列的第一个元素 front 的初始值 = 0</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> front; <span class="comment">//队列头</span></span><br><span class="line">    <span class="comment">//rear 变量的含义做一个调整：rear 指向队列的最后一个元素的后一个位置. </span></span><br><span class="line">    <span class="comment">//因为希望空出一个空间做为约定.rear 的初始值 = 0</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> rear; <span class="comment">// 队列尾</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] arr; <span class="comment">// 该数据用于存放数据，模拟队列</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建队列的构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CircleQueue</span><span class="params">(<span class="keyword">int</span> arrMaxSize)</span> </span>&#123;</span><br><span class="line">        maxSize = arrMaxSize;</span><br><span class="line">        arr = <span class="keyword">new</span> <span class="keyword">int</span>[maxSize];</span><br><span class="line"><span class="comment">//        front = 0;</span></span><br><span class="line"><span class="comment">//        rear = 0;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断队列是否满</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFull</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (rear + <span class="number">1</span>) % maxSize == front;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断队列是否为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rear == front;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加数据到队列</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addQueue</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断队列是否满</span></span><br><span class="line">        <span class="keyword">if</span> (isFull()) &#123;</span><br><span class="line">            System.out.println(<span class="string">"队列满，不能加入数据"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//直接将数据加入</span></span><br><span class="line">        arr[rear] = n;</span><br><span class="line">        <span class="comment">//将rear后移，这里必须考虑取模，也就是循环</span></span><br><span class="line">        rear = (rear + <span class="number">1</span>) % maxSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取队列的数据，出队列</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断队列是否空</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="comment">//通过抛出异常</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列空，不能取数据"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//这里需要分析出front是指向队列的第一个元素</span></span><br><span class="line">        <span class="comment">//1.先把front对应的值保留到一个临时变量</span></span><br><span class="line">        <span class="comment">//2.将front后移, 考虑取模</span></span><br><span class="line">        <span class="comment">//3.将临时保存的变量返回</span></span><br><span class="line">        <span class="keyword">int</span> value = arr[front];</span><br><span class="line">        front = (front + <span class="number">1</span>) % maxSize;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示队列的所有数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//遍历数组</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            System.out.println(<span class="string">"队列空"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//思路：从front开始遍历，遍历多少个元素</span></span><br><span class="line">        <span class="comment">//对i进行取模，循环</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = front; i &lt; front + size(); i++) &#123;</span><br><span class="line">            System.out.printf(<span class="string">"arr[%d]=%d\n"</span>,i % maxSize, arr[i % maxSize]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//求出当前队列的有效数据的个数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (rear + maxSize - front) % maxSize;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//显示队列的头数据，不是取出数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">headQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr[front];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>😎😎 加油！</p>]]></content>
      <categories>
        <category>Java算法与数据结构</category>
      </categories>
      <tags>
        <tag>算法与数据结构</tag>
        <tag>队列</tag>
      </tags>
  </entry>
  <entry>
    <title>Java算法与数据结构之稀疏数组</title>
    <url>/2020/02/02/SparseArray/</url>
    <content><![CDATA[<h1 id="稀疏数组"><a href="#稀疏数组" class="headerlink" title="稀疏数组"></a>稀疏数组</h1><h2 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h2><blockquote>
<p>当一个数组中大部分元素为0，或者为同一个值的数组时，可以使用稀疏数组来保存该数组,也可以理解为压缩数组。</p>
</blockquote>
<p><strong>稀疏数组的处理方法：</strong></p>
<ol>
<li>记录数组一共有几行几列，有多少个不同的值。</li>
<li>把具有不同值的元素的行列及值记录在一个小规模的数组中，从而缩小程序的规模。</li>
</ol>
<h2 id="二、实例"><a href="#二、实例" class="headerlink" title="二、实例"></a>二、实例</h2><ol>
<li>使用稀疏数组，来保留类似前面的二维数组（棋盘、地图等等）</li>
<li>把稀疏数组存盘，并且可以从新恢复原来的二维数组数</li>
<li>整体思路分析：</li>
</ol>
<blockquote>
<p>首先需要将二维数组转换为稀疏数组，然后再将稀疏数组写入到磁盘文件中</p>
<p>通过磁盘文件读取稀疏数组，然后再转换为原来数组</p>
</blockquote>
<p><img src="/2020/02/02/SparseArray/sparseArray1.jpg" alt></p>
<p><strong>二维数组转稀疏数组的思路：</strong></p>
<ol>
<li>遍历原始的二维数组，得到有效数据的个数sum</li>
<li>根据sum就可以创建稀疏数组 spareArray = int [sum+1] [3]</li>
<li>将二维数组的有效数据存入到稀疏数组</li>
</ol>
<p><strong>稀疏数组转原始数组的思路：</strong></p>
<ol>
<li>先读取稀疏数组的第一行，根据第一行的数据，创建原始的二位数组，比如上面的array = int [11] [11]</li>
<li>在读取稀疏数组后几行的数据，并赋给原始的二维数组即可</li>
</ol>
<h2 id="三、代码实现"><a href="#三、代码实现" class="headerlink" title="三、代码实现"></a>三、代码实现</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SparseArray</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个原始的二维数组 11 * 11</span></span><br><span class="line">        <span class="comment">//0：表示没有棋子， 1：表示黑子 2：表示白子</span></span><br><span class="line">        <span class="keyword">int</span>[][] array = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line">        array[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        array[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出</span></span><br><span class="line">        System.out.println(<span class="string">"原始的二维数组："</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] row : array) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> value : row) &#123;</span><br><span class="line">                System.out.printf(<span class="string">"%d\t"</span>,value);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* **二维数组转稀疏数组的思路：**</span></span><br><span class="line"><span class="comment">        1. 遍历原始的二维数组，得到有效数据的个数sum</span></span><br><span class="line"><span class="comment">        2. 根据sum就可以创建稀疏数组 spareArray = int [sum+1] [3]</span></span><br><span class="line"><span class="comment">        3. 将二维数组的有效数据存入到稀疏数组*/</span></span><br><span class="line">       <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">11</span>; j++) &#123;</span><br><span class="line">               <span class="keyword">if</span> (array[i][j] != <span class="number">0</span>)</span><br><span class="line">                   sum++;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//创建对应的稀疏数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] sparseArray = <span class="keyword">new</span> <span class="keyword">int</span>[sum + <span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">       <span class="comment">//给稀疏数组赋值</span></span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">11</span>;</span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">11</span>;</span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历二维数组，将非0的值存放到稀疏数组中</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>; <span class="comment">//计数器</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">11</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    sparseArray[count][<span class="number">0</span>] = i;</span><br><span class="line">                    sparseArray[count][<span class="number">1</span>] = j;</span><br><span class="line">                    sparseArray[count][<span class="number">2</span>] = array[i][j];</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出稀疏数组</span></span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">"得到的稀疏数组为"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sparseArray.length; i++) &#123;</span><br><span class="line">            System.out.printf(<span class="string">"%d\t%d\t%d\t\n"</span>,sparseArray[i][<span class="number">0</span>], sparseArray[i][<span class="number">1</span>], sparseArray[i][<span class="number">2</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//将稀疏数组恢复到原始数组</span></span><br><span class="line">        <span class="comment">//1. 先读取稀疏数组的第一行，根据第一行的数据，创建原始的二位数组，比如上面的array = int [11] [11]</span></span><br><span class="line">        <span class="keyword">int</span> array2[][] = <span class="keyword">new</span> <span class="keyword">int</span>[ sparseArray[<span class="number">0</span>][<span class="number">0</span>] ][ sparseArray[<span class="number">0</span>][<span class="number">1</span>]] ;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//2. 在读取稀疏数组后几行的数据(从第二行)，并赋给原始的二维数组即可</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; sparseArray.length; i++) &#123;</span><br><span class="line">            array2[ sparseArray[i][<span class="number">0</span>] ][ sparseArray[i][<span class="number">1</span>] ] = sparseArray[i][<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//输出恢复后的二维数组</span></span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">"恢复后的二维数组为"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] row : array2) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> value : row) &#123;</span><br><span class="line">                System.out.printf(<span class="string">"%d\t"</span>,value);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">原始的二维数组：</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">1</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">2</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"></span><br><span class="line">得到的稀疏数组为</span><br><span class="line"><span class="number">11</span>	<span class="number">11</span>	<span class="number">2</span>	</span><br><span class="line"><span class="number">1</span>	<span class="number">2</span>	<span class="number">1</span>	</span><br><span class="line"><span class="number">2</span>	<span class="number">3</span>	<span class="number">2</span>	</span><br><span class="line"></span><br><span class="line">恢复后的二维数组为</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">1</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">2</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	</span><br><span class="line"><span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span>	<span class="number">0</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java算法与数据结构</category>
      </categories>
      <tags>
        <tag>算法与数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>Java算法与数据结构之排序（一）</title>
    <url>/2020/01/21/SortAlgorithm/</url>
    <content><![CDATA[<h1 id="算法与数据结构之排序（一）"><a href="#算法与数据结构之排序（一）" class="headerlink" title="算法与数据结构之排序（一）"></a>算法与数据结构之排序（一）</h1><p>最常用的排序算法：</p>
<p><code>冒泡排序</code>、<code>插入排序</code>、<code>选择排序</code>、<code>希尔排序</code>、<code>归并排序</code>、<code>快速排序</code>、<code>基数排序</code>、<code>桶排序</code>。</p>
<h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><table>
<thead>
<tr>
<th>排序算法</th>
<th>时间复杂度</th>
</tr>
</thead>
<tbody><tr>
<td>冒泡、插入、选择</td>
<td>O(n^2)</td>
</tr>
<tr>
<td>希尔</td>
<td>O(n1.5)</td>
</tr>
<tr>
<td>快排、归并</td>
<td>O(nlogn)</td>
</tr>
<tr>
<td>桶、基数</td>
<td>O(n)</td>
</tr>
</tbody></table>
<h2 id="1、桶排序（Bucket-Sort）"><a href="#1、桶排序（Bucket-Sort）" class="headerlink" title="1、桶排序（Bucket Sort）"></a>1、桶排序（Bucket Sort）</h2><p>桶排序 (Bucket sort)或所谓的箱排序，是一个排序算法，工作的原理是将数组分到有限数量的桶子里。每个桶子再个别排序（有可能再使用别的排序算法或是以递归方式继续使用桶排序进行排序）。简单来说就是要将排序的数据分到几个有序的桶里，再将每个桶里的数据进行单独排序。桶内排完序后，再把给桶里的数据按照顺序取出。</p>
<p>举个栗子！（将每个数据分到一个桶）😏😏</p>
<blockquote>
<p>题目：我们需要将6个同学的分数（3，5，3，4，8，9）从大到小进行排序，满分为10分</p>
</blockquote>
<p>  首先我需要定义一个下界为11的数组a[11],初始化为零，表示这些分数还没有人得过。</p>
<p><img src="/2020/01/21/SortAlgorithm/bucketsort1.jpg" alt></p>
<p>  然后开始处理每一个人的分数</p>
<p>  第一个同学分数为3分，则在相对应的a[3]的值基础上加1，a[3]的值从0变1,表示3分出现过一次。</p>
<p><img src="/2020/01/21/SortAlgorithm/bucketsort2.jpg" alt></p>
<p>  第二个人的分数为5，则在相对应的a[5]的值基础上加1，a[5]的值从0变1,表示5分出现过一次。</p>
<p><img src="/2020/01/21/SortAlgorithm/bucketsort3.jpg" alt></p>
<p>  第三个人的分数为3，则在相对应的a[3]的值基础上加1，a[3]的值从1变2,表示3分出现了两次。</p>
<p><img src="/2020/01/21/SortAlgorithm/bucketsort4.jpg" alt></p>
<p>  依此类推，最终结果为下图</p>
<p><img src="/2020/01/21/SortAlgorithm/bucketsort5.jpg" alt></p>
<p>  最后我们将出现的分数打印出来，出现几次就打印几次</p>
<p>Java代码如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BucketSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> n = scanner.nextInt(); <span class="comment">//输入n个数</span></span><br><span class="line">        <span class="keyword">int</span>[] scores = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">int</span>[] bucket = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">11</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123; <span class="comment">// 循环读入n个数，并进行桶排序</span></span><br><span class="line">            scores[i] = scanner.nextInt();</span><br><span class="line">            bucket[scores[i]]++; <span class="comment">//进行计数，对应编号为scores[i]的桶放入分数</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; bucket.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; bucket[i]; j++) <span class="comment">//出现几次就将桶的编号打印几次</span></span><br><span class="line">                System.out.print(i + <span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输入数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">3 5 3 4 8 9</span><br></pre></td></tr></table></figure>

<p>输出数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 3 4 5 8 9</span><br></pre></td></tr></table></figure>

<p>  如果要实现从大到小排序，只需要将<code>for (int i = 0; i &lt; bucket.length; i++)</code>改为<code>for (int i = bucket.length; i &gt; 0; i--)</code></p>
<p>  桶排序就好比有11个桶🛢，编号从0~10.每出现一个数，就在对应编号的桶中放一个篮球🏀，最后只要数数每个桶中有几个篮球🏀就好啦！我们需要<strong>注意的是桶的数量</strong></p>
<p>  最后桶排序时间复杂度为<code>O(M+N)</code>，m为桶的个数，n为待排序数的个数。本次桶排序举的栗子是简化版的，真正的桶排序在分桶的时候，每个桶会有一个范围的数据，然后在桶里在进行排序。</p>
<h2 id="2、冒泡排序（Bubble-Sort）"><a href="#2、冒泡排序（Bubble-Sort）" class="headerlink" title="2、冒泡排序（Bubble Sort）"></a>2、冒泡排序（Bubble Sort）</h2><p>冒泡排序的基本思想是：每次比较两个相邻的元素，如果它们的顺序错误就把他们交换过来。从第一个元素起。比较相邻的元素，如果第一个比第一个大，就交换。然后继续比较，知道最大的数到最后一个。所有元素重复以上动作。👈</p>
<blockquote>
<p>举个例子，需要对数组a[5,8,3,4,2]进行从小到大排序</p>
</blockquote>
<p>从小到大排序就需要将最大的数冒到最后面</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[] = &#123;<span class="number">5</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length - <span class="number">1</span>; i++)&#123; <span class="comment">// 5个数排序，只用进行n-1趟，即4趟</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; a.length - <span class="number">1</span> - i; j++)&#123;</span><br><span class="line">          <span class="comment">//从第1位开始比较直到最后一个归位的数，i可以认为为已经归位了几个数字</span></span><br><span class="line"><span class="comment">//第一趟 i = 0</span></span><br><span class="line">第一次: <span class="number">5</span> <span class="number">8</span> <span class="number">3</span> <span class="number">4</span> <span class="number">2</span> (j = <span class="number">0</span>)</span><br><span class="line">第二次: <span class="number">5</span> <span class="number">3</span> <span class="number">8</span> <span class="number">4</span> <span class="number">2</span> (j = <span class="number">1</span>)</span><br><span class="line">第三次: <span class="number">5</span> <span class="number">3</span> <span class="number">4</span> <span class="number">8</span> <span class="number">2</span> (j = <span class="number">2</span>)</span><br><span class="line">第四次: <span class="number">5</span> <span class="number">3</span> <span class="number">4</span> <span class="number">2</span> <span class="number">8</span> (j = <span class="number">3</span>) <span class="comment">//8归位</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第二趟 i = 1</span></span><br><span class="line">第一次: <span class="number">3</span> <span class="number">5</span> <span class="number">4</span> <span class="number">2</span> <span class="number">8</span> (j = <span class="number">0</span>)</span><br><span class="line">第二次: <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">2</span> <span class="number">8</span> (j = <span class="number">1</span>)</span><br><span class="line">第三次: <span class="number">3</span> <span class="number">4</span> <span class="number">2</span> <span class="number">5</span> <span class="number">8</span> (j = <span class="number">2</span>) <span class="comment">//5归位</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第三趟 i = 2</span></span><br><span class="line">第一次: <span class="number">3</span> <span class="number">4</span> <span class="number">2</span> <span class="number">5</span> <span class="number">8</span> (j = <span class="number">0</span>)</span><br><span class="line">第二次: <span class="number">3</span> <span class="number">2</span> <span class="number">4</span> <span class="number">5</span> <span class="number">8</span> (j = <span class="number">1</span>) <span class="comment">//4归位</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第四趟 i = 3</span></span><br><span class="line">第一次: <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">8</span> (j = <span class="number">0</span>) <span class="comment">//2归位</span></span><br></pre></td></tr></table></figure>

<p>动态图如下：</p>
<img alt="动态图" src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWFnZXMyMDE3LmNuYmxvZ3MuY29tL2Jsb2cvODQ5NTg5LzIwMTcxMC84NDk1ODktMjAxNzEwMTUyMjMyMzg0NDktMjE0NjE2OTE5Ny5naWY">



<p>Java代码如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BubbleSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = scanner.nextInt(); <span class="comment">//输入n个数</span></span><br><span class="line">        <span class="keyword">int</span>[] scores = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            scores[i] = scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 冒泡排序核心部分</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)&#123; <span class="comment">// n个数排序，只用进行n-1趟</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n - <span class="number">1</span> - i; j++)&#123; <span class="comment">//从第1位开始比较直到最后一个归为的数，i可以认为为已经归为了几个数字</span></span><br><span class="line">                <span class="keyword">if</span> (scores[j] &gt; scores[j + <span class="number">1</span>])&#123; <span class="comment">// 比较大小并交换</span></span><br><span class="line">                    <span class="keyword">int</span> temp;</span><br><span class="line">                    temp = scores[j];</span><br><span class="line">                    scores[j] = scores[j + <span class="number">1</span>];</span><br><span class="line">                    scores[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> score : scores)</span><br><span class="line">            System.out.print(score + <span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输入数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">8 9 14 2 90 76 46 35 24 57</span><br></pre></td></tr></table></figure>

<p>输出数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 8 9 14 24 35 46 57 76 90</span><br></pre></td></tr></table></figure>

<p> 👉 冒泡排序的核心部分是<code>双重嵌套循环。</code></p>
<p> 👉 冒泡排序的时间复杂度为<code>O(N^2)</code></p>
<h2 id="3、快速排序（Qucik-Sort）"><a href="#3、快速排序（Qucik-Sort）" class="headerlink" title="3、快速排序（Qucik Sort）"></a>3、快速排序（Qucik Sort）</h2><p>快速排序基本思想是：通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。快速排序是基于一种“二分”思想，分治思想。</p>
<blockquote>
<p>举个栗子，将4 1 6 2 9 3进行快速排序</p>
</blockquote>
<p>  首先在这个序列中随便找一个基准数（pivot）。为了方便，通常让第一个数4作为基准数。接下来，需要将这个序列所有比基准数大的数放在4的右边，比基准数小的数放在4的左边，即：</p>
<p>​         2    1    3    <u><strong>4</strong></u>    9    6</p>
<p>  在初始状态下，数字4在序列的第一位。我们需要将4挪到中间的一个位置，假设这个位置是k。现在需要找这个k，并且以k为分界点，左边的数都小于等于4，右边的数都是大于等于4。</p>
<p>  分别从初始序列“4   1   6   2   9   3”两端开始勘测。先从<code>右</code>往<code>左</code>找一个小于4的数，找到后，再从<code>左</code>往<code>右</code>找一个大于4的数，然后交换他们。这里可以用两个变量i和j，分别指向序列最左边和最右边。刚开始的时候“哨兵i”指向序列最左边（即i=1）,指向数字4，“哨兵j”指向序列最右边（即j=4）,指向数字3。</p>
<p><img src="/2020/01/21/SortAlgorithm/quicksort1.jpg" alt></p>
<p>  首先哨兵j开始出动。因为基准数设置为最左边的数。哨兵j一步一步向左挪到（即j–），直到找到一个小于4的数停下来，接下来哨兵i再一步一步向右挪动（即i++），直到找到一个大于4的数停下来。最后哨兵j停在了数字3上面，哨兵i停在了数字6上。</p>
<p><img src="/2020/01/21/SortAlgorithm/quicksort2.jpg" alt></p>
<p>  现在交换哨兵i和哨兵j所指向的元素的值。交换后序列如下</p>
<p>  4   1   <u><strong>3</strong></u>   2   9   <u><strong>6</strong></u></p>
<p>  到此，第一次交换结束。接下来哨兵j继续向左挪动。哨兵j找到了数字2后，哨兵i继续向右挪动，然后与哨兵j相遇后，与基准数交换。第一轮勘测结束。此时4左边的数都小于等于4，4右边的数都大于等于4。哨兵j的使命就是要找小于基准数的数，而哨兵i的使命就是找大于基准数的数，直到i和j相遇为止。</p>
<p><img src="/2020/01/21/SortAlgorithm/quicksort3.jpg" alt></p>
<p>相遇后与基准数交换后的序列为：</p>
<p>2   1   3    <u><strong>4</strong></u>   9   6</p>
<p>现在基准数4已经归位，此时，我们以4为分界点拆分为两个序列，左边为“2    1    3”，右边序列为“9    6”。接下来我们按照第一轮勘测的方法继续处理。直到不可拆分出新的子序列为止。</p>
<p><img src="/2020/01/21/SortAlgorithm/quicksort4.jpg" alt></p>
<p>最终序列为</p>
<p>1    2    3    4    6    9</p>
<p>动态图如下：</p>
<p><img src="/2020/01/21/SortAlgorithm/quicksort5.gif" alt></p>
<p>Java代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = scanner.nextInt(); <span class="comment">//输入n个数</span></span><br><span class="line">        <span class="keyword">int</span>[] scores = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="comment">//</span></span><br><span class="line">            scores[i] = scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用快速排序函数</span></span><br><span class="line">        <span class="comment">//quickSort(排序的数组，左边范围，右边范围 - 1)</span></span><br><span class="line">        quickSort(scores, <span class="number">0</span>, scores.length - <span class="number">1</span>) ;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> score : scores)</span><br><span class="line">            System.out.print(score + <span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(left &gt;= right) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> i = left;</span><br><span class="line">        <span class="keyword">int</span> j = right;</span><br><span class="line">        <span class="keyword">int</span> key = a[left]; <span class="comment">//key存的是基准数</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(i &lt; j)&#123;</span><br><span class="line">            <span class="comment">//顺序很重要，要先从右往左边找</span></span><br><span class="line">            <span class="keyword">while</span>(a[j] &gt;= key &amp;&amp; i &lt; j)</span><br><span class="line">                j--;</span><br><span class="line">            <span class="comment">//再从左往右找</span></span><br><span class="line">            <span class="keyword">while</span>(a[i] &lt;= key &amp;&amp; i &lt; j)</span><br><span class="line">                i++;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//交换两个数在数组中的位置</span></span><br><span class="line">            <span class="keyword">if</span>(i &lt; j)&#123;  <span class="comment">// 当哨兵i和哨兵j没有相遇时</span></span><br><span class="line">                <span class="keyword">int</span> t = a[i];</span><br><span class="line">                a[i] = a[j];</span><br><span class="line">                a[j] = t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//最终将基准数归位</span></span><br><span class="line">        a[left] = a[i];</span><br><span class="line">        a[i] = key;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//递归处理</span></span><br><span class="line">        quickSort(a, left, i-<span class="number">1</span>); <span class="comment">// 继续处理左边的，这里是一个递归的过程</span></span><br><span class="line">        quickSort(a, i+<span class="number">1</span>, right); <span class="comment">// 继续处理右边的，这里是一个递归的过程</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输入数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">8 9 14 2 90 76 46 35 24 57</span><br></pre></td></tr></table></figure>

<p>输出数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 8 9 14 24 35 46 57 76 90</span><br></pre></td></tr></table></figure>

<p>  快速排序之所以比较快，是因为相比冒泡排序，每次交换是跳跃式的。每次排序的时候设置一个基准点，将小于等于基准点的数全部放到基准点的左边，将大于等于基准点的数全部放到基准点的右边。这样在每次交换的时候就不会像冒泡排序一样只能在相邻的数之间进行交换，交换的距离就大得多了。因此总的比较和交换次数就少了，速度自然就提高了。当<br>然在坏的情况下，仍可能是相邻的两个数进行了交换。因此快速排序的差时间复杂度和 冒泡排序是一样的，都是 O(N2)，它的平均时间复杂度为 O (NlogN)。</p>
<p>未完待续~~😘😘</p>]]></content>
      <categories>
        <category>Java算法与数据结构</category>
      </categories>
      <tags>
        <tag>算法与数据结构</tag>
        <tag>排序</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言学生成绩管理系统</title>
    <url>/2020/01/15/C-Administration/</url>
    <content><![CDATA[<h1 id="C语言-学生成绩管理系统"><a href="#C语言-学生成绩管理系统" class="headerlink" title="C语言 学生成绩管理系统"></a>C语言 学生成绩管理系统</h1><blockquote>
<p>简述：该学生管理系统数据结构采用结构体</p>
</blockquote>
<h1 id="1、系统需求分析"><a href="#1、系统需求分析" class="headerlink" title="1、系统需求分析"></a>1、系统需求分析</h1><h2 id="1-1系统介绍"><a href="#1-1系统介绍" class="headerlink" title="1.1系统介绍"></a>1.1系统介绍</h2><p>本学生管理系统是为教师人员提供管理班级成绩的工具，该系统可以实现的对学生的成绩进行增、删、改、查、信息保存和信息导入等基本功能，以及对学生成绩排序和分段的扩展功能，有利于对学生成绩管理。</p>
<a id="more"></a>

<h2 id="1-2功能性需求"><a href="#1-2功能性需求" class="headerlink" title="1.2功能性需求"></a>1.2功能性需求</h2><p>（1）    成绩录入</p>
<p>（2）    成绩输出、成绩排序（按平均成绩）</p>
<p>（3）    成绩查找</p>
<p>（4）    成绩修改</p>
<p>（5）    删除成绩</p>
<p>（6）    文件存储、文件导入</p>
<h2 id="1-3非功能性需求"><a href="#1-3非功能性需求" class="headerlink" title="1.3非功能性需求"></a>1.3非功能性需求</h2><p>（1）    友好的交互页面</p>
<p>（2）    登陆密码设置</p>
<p>（3）    数据的保护</p>
<h1 id="2、程序结构设计"><a href="#2、程序结构设计" class="headerlink" title="2、程序结构设计"></a>2、程序结构设计</h1><blockquote>
<p>该该系统总体的流程图框架如下</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">graph TD</span><br><span class="line">学生成绩管理系统 --&gt;A[登 陆 界 面]</span><br><span class="line">A--&gt;B[菜 单 界 面]</span><br><span class="line">B--&gt;录入成绩</span><br><span class="line">B--&gt;输出成绩</span><br><span class="line">B--&gt;C[成绩排序]</span><br><span class="line">B--&gt;D[成绩查找]</span><br><span class="line">D--&gt;按学号查找</span><br><span class="line">D--&gt;按姓名查找</span><br><span class="line">B--&gt;成绩修改</span><br><span class="line">B--&gt;F[成绩删除]</span><br><span class="line">F--&gt;按学号删除</span><br><span class="line">F--&gt;按姓名删除</span><br><span class="line">B--&gt;E[文件管理]</span><br><span class="line">E--&gt;文件导入</span><br><span class="line">E--&gt;文件保存</span><br></pre></td></tr></table></figure>


<h1 id="3、用户界面设计"><a href="#3、用户界面设计" class="headerlink" title="3、用户界面设计"></a>3、用户界面设计</h1><h2 id="登陆界面"><a href="#登陆界面" class="headerlink" title="登陆界面"></a>登陆界面</h2><blockquote>
<p>登陆界面根据自己的需要进行设计，尽量设计的和谐美观。<br>如我的登陆界面额外添加了获取时间和登陆密码功能！<br>以下展示主要代码和效果展示。</p>
</blockquote>
<blockquote>
<p>获取时间代码</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">   <span class="keyword">time_t</span> timep;    <span class="comment">//系统时间 </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tm</span> *<span class="title">p_1</span>;</span></span><br><span class="line">time (&amp;timep);</span><br><span class="line">p_1=gmtime(&amp;timep);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t  当前时间%02d时%02d分%\n"</span>,<span class="number">8</span>+p_1-&gt;tm_hour,p_1-&gt;tm_min); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t   %d年%02d月%02d日\n"</span>,<span class="number">1900</span>+p_1-&gt;tm_year,<span class="number">1</span>+p_1-&gt;tm_mon,p_1-&gt;tm_mday);</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"\t★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★\n\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t★\t\t\t\t\t有朋自远方来，不亦乐乎！ \t\t\t\t\t★\n\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t★\t\t\t*****************************************************\t\t\t\t★\n\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t★\t\t\t\t\t 学 生 管 理 系 统\t\t\t\t\t\t★\n\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t★\t\t\t  制作者:Mr.Wang 专业:软件工程1801 学号:************\t\t\t\t★\n\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t★\t\t\t*****************************************************\t\t\t\t★\n\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t★\t\t\t  欢迎使用软件工程18-01的学生管理系统,祝您使用愉快! \t\t\t\t★\n\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★\n\n"</span>);</span><br></pre></td></tr></table></figure>

<p>如图：<img src="https://img-blog.csdnimg.cn/20190328132901443.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzUzMzUzOA==,size_16,color_FFFFFF,t_70" alt="登陆界面"></p>
<h2 id="菜单界面"><a href="#菜单界面" class="headerlink" title="菜单界面"></a>菜单界面</h2><blockquote>
<p>进入页面后设计一个菜单界面，也就是功能界面，在该界面上进行操作</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t★————————————————————————————————————————★\n\n"</span>);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"\t\t\t   | 1. 成绩录入\t\t2. 成绩显示\t\t3. 各科均分  |\n\n"</span>);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"\t\t\t   | 4. 成绩排序\t\t5. 成绩查找\t\t6. 信息修改  |\n\n"</span>);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"\t\t\t   | 7. 删除成绩\t\t8. 成绩分段\t\t0. 退出系统  |\n\n"</span>);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"\t\t★————————————————————————————————————————★\n"</span>);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>展示如下：</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20190328132935285.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzUzMzUzOA==,size_16,color_FFFFFF,t_70" alt="登陆界面"></p>
<h1 id="4、功能设计"><a href="#4、功能设计" class="headerlink" title="4、功能设计"></a>4、功能设计</h1><blockquote>
<p>在该模块中，将会介绍程序的主要功能实现的设计思想和代码</p>
</blockquote>
<h2 id="4-1成绩录入"><a href="#4-1成绩录入" class="headerlink" title="4.1成绩录入"></a>4.1成绩录入</h2><blockquote>
<p>设计思想</p>
</blockquote>
<p>成绩录入是对结构体中班级、姓名、学号和五门成绩的录入，同时加上对五门成绩平均成绩的计算。按照基本的录入，只需用scanf函数对数据输入，用printf函数进行汉字的打印即可。然后进行文件保存该组数据，最后判断是否继续录入。</p>
<blockquote>
<p>流程图如下</p>
<p><img src="https://img-blog.csdnimg.cn/20190328133229893.jpg" alt="input"><br>代码</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//学生成绩录入</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(struct Student stu[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(struct Student stu[])</span></span>;<span class="comment">//声明保存文件函数</span></span><br><span class="line">    <span class="keyword">int</span> choose;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">char</span> tempcla[<span class="number">10</span>]=&#123;<span class="string">"-1"</span>&#125;;  <span class="comment">//定义临时姓名字符串，用于按（-1）返回菜单 </span></span><br><span class="line">    a:</span><br><span class="line">    system(<span class="string">"cls"</span>);    <span class="comment">//清屏</span></span><br><span class="line">    fflush(<span class="built_in">stdin</span>);    <span class="comment">//清空缓存区 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"成  绩  录  入\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"************************************************************************************************************\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请依次输入\t\t班级、姓名、  学号、     五门课成绩(高数 英语 C语言 计算机基础 软件工程导论)\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"班级(按-1返回菜单)："</span>);  <span class="comment">//输入班级</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,stu[count].cla)==<span class="number">0</span>)   <span class="comment">//判断返回值，除去类型错误bug </span></span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strcmp</span>(stu[count].cla,tempcla)==<span class="number">0</span>)  <span class="comment">//按-1返回菜单</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n按任意键返回菜单！\n\n"</span>);</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">strlen</span>(stu[count].cla)&gt;<span class="number">10</span>)  <span class="comment">//判断字符长度</span></span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"班级输入不合理，请重新录入:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,stu[count].cla);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n姓名："</span>);  <span class="comment">//输入姓名</span></span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,stu[count].name)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">strlen</span>(stu[count].name)&gt;<span class="number">7</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"姓名不合理，请重新录入:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,stu[count].name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n学号："</span>);    <span class="comment">//输入姓名</span></span><br><span class="line">    w:</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;stu[count].num)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)     <span class="comment">//判断重复学号</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(stu[count].num==stu[i].num)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"已有该学号，请重新输入：\n"</span>);</span><br><span class="line">            <span class="keyword">goto</span> w;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n高数(0~100)："</span>);  <span class="comment">//输入高数</span></span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[count].score[<span class="number">0</span>])==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(stu[count].score[<span class="number">0</span>]&lt;<span class="number">0</span>||stu[count].score[<span class="number">0</span>]&gt;<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"数据超出，请重新输入："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[count].score[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n英语(0~100)："</span>);   <span class="comment">//输入英语</span></span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[count].score[<span class="number">1</span>])==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(stu[count].score[<span class="number">1</span>]&lt;<span class="number">0</span>||stu[count].score[<span class="number">1</span>]&gt;<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"数据超出，请重新输入："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[count].score[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\nC语言(0~100)："</span>);  <span class="comment">//输入C语言</span></span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[count].score[<span class="number">2</span>])==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(stu[count].score[<span class="number">2</span>]&lt;<span class="number">0</span>||stu[count].score[<span class="number">2</span>]&gt;<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"数据超出，请重新输入："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[count].score[<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n计算机基础(0~100)："</span>);  <span class="comment">//输入计算机基础</span></span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[count].score[<span class="number">3</span>])==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(stu[count].score[<span class="number">3</span>]&lt;<span class="number">0</span>||stu[count].score[<span class="number">3</span>]&gt;<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"数据超出，请重新输入："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[count].score[<span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n软件工程导论(0~100)："</span>); <span class="comment">//输入软件工程导论</span></span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[count].score[<span class="number">4</span>])==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(stu[count].score[<span class="number">4</span>]&lt;<span class="number">0</span>||stu[count].score[<span class="number">4</span>]&gt;<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"数据超出，请重新输入："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[count].score[<span class="number">4</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    stu[count].aver=(stu[count].score[<span class="number">0</span>]+stu[count].score[<span class="number">1</span>]+stu[count].score[<span class="number">2</span>]+stu[count].score[<span class="number">3</span>]+stu[count].score[<span class="number">4</span>])/<span class="number">5.0</span>;<span class="comment">//计算平均成绩 </span></span><br><span class="line">    count++;   <span class="comment">//结构体数据数+1</span></span><br><span class="line">    save(p);   <span class="comment">//保存文件</span></span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"是否继续录入：\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1.是 2.否\n"</span>);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n请选择:"</span>);</span><br><span class="line">    b:</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choose)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    	<span class="built_in">printf</span>(<span class="string">"您输入的格式错误，请重新输入：\n"</span>);</span><br><span class="line">    	fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    	<span class="keyword">goto</span> b;</span><br><span class="line">	&#125;</span><br><span class="line">   <span class="keyword">switch</span>(choose)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:<span class="keyword">goto</span> a;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:<span class="keyword">return</span>;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:<span class="built_in">printf</span>(<span class="string">"没有该序号，请重新输入："</span>);<span class="keyword">goto</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>部分代码说明</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,stu[count].cla)==<span class="number">0</span>)   <span class="comment">//判断返回值，除去类型错误bug </span></span><br><span class="line">   &#123;</span><br><span class="line">       fflush(<span class="built_in">stdin</span>);</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line"> <span class="comment">//在输入成绩时通常直接使用scanf，但当我们做项目时，为了具有一定的容错性，需要判断输入数据的类型和</span></span><br><span class="line"> <span class="comment">//判断scanf的返回值，如果直接使用scanf，输入其它类型的数据，程序将会炸掉，因此我们需要用这种形式</span></span><br><span class="line"> <span class="comment">//保证系统正常运行</span></span><br></pre></td></tr></table></figure>

<p>scanf的返回值具体解释见他人解释，地址如下：<br>(<a href="https://blog.csdn.net/zhl254467014/article/details/44183567" target="_blank" rel="noopener">https://blog.csdn.net/zhl254467014/article/details/44183567</a>)</p>
<blockquote>
<p>为了方便其它功能的实现，在这里需要判断学号是否重复，保证学号的唯一性</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">w:</span><br><span class="line">   fflush(<span class="built_in">stdin</span>);</span><br><span class="line">   <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;stu[count].num)==<span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       fflush(<span class="built_in">stdin</span>);</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)     <span class="comment">//判断重复学号</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">if</span>(stu[count].num==stu[i].num)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="built_in">printf</span>(<span class="string">"已有该学号，请重新输入：\n"</span>);</span><br><span class="line">           <span class="keyword">goto</span> w;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-2成绩显示"><a href="#4-2成绩显示" class="headerlink" title="4.2成绩显示"></a>4.2成绩显示</h2><blockquote>
<p>由于我想按照平均成绩排序的方式输出，因此直接调用该函数</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//学生成绩显示</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(struct Student stu[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(struct Student stu[])</span></span>;<span class="comment">//声明平均成绩排序函数</span></span><br><span class="line">    system(<span class="string">"cls"</span>);<span class="comment">//清屏函数</span></span><br><span class="line">    <span class="keyword">if</span>(count==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"\n您尚未录入学生信息，请返回菜单进行录入！\n"</span>);</span><br><span class="line">    sort(p);    <span class="comment">//排序函数</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-3成绩排序"><a href="#4-3成绩排序" class="headerlink" title="4.3成绩排序"></a>4.3成绩排序</h2><blockquote>
<p>排序思想：<br>成绩排序是将结构体中的数据按平均成绩进行排序，在本系统中，我将成绩排序非为按五门成绩排序和平均成绩排序，排序的思想是运用冒泡排序。在此功能中需注意的是排序时要将整组数据随着平均成绩一起改变，最后不能出现平均成绩与信息对应不上。其次在进行字符串互换的时候不能直接赋值号进行互换，要用strcpy函数进行复制，在这里只展示按平均成绩排序的代码，其它成绩排序与之相似</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//平均成绩排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(struct Student stu[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(struct Student stu[])</span></span>;</span><br><span class="line">    system(<span class="string">"cls"</span>);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">char</span> tempname[<span class="number">20</span>];  <span class="comment">//临时变量</span></span><br><span class="line">    <span class="keyword">char</span> tempcla[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> t1;</span><br><span class="line">    <span class="keyword">float</span> t;</span><br><span class="line">    <span class="keyword">if</span>(count==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"\n\n您尚未录入学生信息，请返回菜单进行录入！\n\n"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n成绩显示(按平均成绩排序)\n"</span>);   <span class="comment">//冒泡排序</span></span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count<span class="number">-1</span>;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;count-i<span class="number">-1</span>;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(stu[j].aver&lt;stu[j+<span class="number">1</span>].aver)  <span class="comment">//注意字符串的复制 </span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">strcpy</span>(tempcla,stu[j].cla);<span class="built_in">strcpy</span>(stu[j].cla,stu[j+<span class="number">1</span>].cla);<span class="built_in">strcpy</span>(stu[j+<span class="number">1</span>].cla,tempcla);</span><br><span class="line">                        <span class="built_in">strcpy</span>(tempname,stu[j].name);<span class="built_in">strcpy</span>(stu[j].name,stu[j+<span class="number">1</span>].name);<span class="built_in">strcpy</span>(stu[j+<span class="number">1</span>].name,tempname);</span><br><span class="line">                        t1=stu[j].num;stu[j].num=stu[j+<span class="number">1</span>].num;stu[j+<span class="number">1</span>].num=t1;</span><br><span class="line">                        t=stu[j].score[<span class="number">0</span>];stu[j].score[<span class="number">0</span>]=stu[j+<span class="number">1</span>].score[<span class="number">0</span>];stu[j+<span class="number">1</span>].score[<span class="number">0</span>]=t;</span><br><span class="line">                        t=stu[j].score[<span class="number">1</span>];stu[j].score[<span class="number">1</span>]=stu[j+<span class="number">1</span>].score[<span class="number">1</span>];stu[j+<span class="number">1</span>].score[<span class="number">1</span>]=t;</span><br><span class="line">                        t=stu[j].score[<span class="number">2</span>];stu[j].score[<span class="number">2</span>]=stu[j+<span class="number">1</span>].score[<span class="number">2</span>];stu[j+<span class="number">1</span>].score[<span class="number">2</span>]=t;</span><br><span class="line">                        t=stu[j].score[<span class="number">3</span>];stu[j].score[<span class="number">3</span>]=stu[j+<span class="number">1</span>].score[<span class="number">3</span>];stu[j+<span class="number">1</span>].score[<span class="number">3</span>]=t;</span><br><span class="line">                        t=stu[j].score[<span class="number">4</span>];stu[j].score[<span class="number">4</span>]=stu[j+<span class="number">1</span>].score[<span class="number">4</span>];stu[j+<span class="number">1</span>].score[<span class="number">4</span>]=t;</span><br><span class="line">                        t=stu[j].aver;stu[j].aver=stu[j+<span class="number">1</span>].aver;stu[j+<span class="number">1</span>].aver=t;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"************************************************************************************************************\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\t班级\t姓名\t学号\t\t高数\t英语\tC语言\t计算机基础\t软件工程导论\t平均成绩\t\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"************************************************************************************************************\n"</span>);</span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"\t%-8s%-8s%-16lld%-8.2lf%-8.2lf%-8.2lf%-16.2lf%-16.2lf%-12.2lf\n"</span>,stu[i].cla,stu[i].name,stu[i].num,</span><br><span class="line">                   stu[i].score[<span class="number">0</span>],stu[i].score[<span class="number">1</span>],stu[i].score[<span class="number">2</span>],stu[i].score[<span class="number">3</span>],stu[i].score[<span class="number">4</span>],stu[i].aver);</span><br><span class="line">    save(p);   <span class="comment">//保存文件</span></span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-4成绩查找"><a href="#4-4成绩查找" class="headerlink" title="4.4成绩查找"></a>4.4成绩查找</h2><blockquote>
<p>设计思想：<br>成绩查找需要实现的是按学号和姓名查找到学生的所有信息，然后打印出来。该功能的思想是输入学号或姓名，然后在循环体中对结构体进行遍历，找到所查到的结构体的下标值，然后将该下标值对应学生的信息打印出来。按照姓名查询时，判断字符串是否相等需要用strcmp函数。在循环体中对结构体进行遍历的时候，找到的时候，可以用break跳出循环，提高效率。</p>
</blockquote>
<blockquote>
<p>流程图如下：</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20190328134815840.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzUzMzUzOA==,size_16,color_FFFFFF,t_70" alt="search"></p>
<blockquote>
<p>代码展示</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//按学号查询</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">findnum</span><span class="params">(struct Student stu[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> searchindex=<span class="number">-1</span>;  <span class="comment">//定义下表值 </span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> searchnum;</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n请输入查询成绩的学生学号："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;searchnum);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(searchnum==stu[i].num)</span><br><span class="line">        &#123;</span><br><span class="line">            system(<span class="string">"cls"</span>);</span><br><span class="line">            searchindex=i;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"************************************************************************************************************\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\t班级\t姓名\t学号\t\t高数\t英语\tC语言\t计算机基础\t软件工程导论\t平均成绩\t\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"************************************************************************************************************\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\t%-8s%-8s%-16lld%-8.2lf%-8.2lf%-8.2lf%-16.2lf%-16.2lf%-12.2lf\n\n"</span>,stu[i].cla,stu[i].name,stu[i].num,</span><br><span class="line">                   stu[i].score[<span class="number">0</span>],stu[i].score[<span class="number">1</span>],stu[i].score[<span class="number">2</span>],stu[i].score[<span class="number">3</span>],stu[i].score[<span class="number">4</span>],stu[i].aver);</span><br><span class="line">            <span class="keyword">break</span>;  <span class="comment">//找到后跳出 </span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(searchindex==<span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n很抱歉，没有找到该学生的学号！\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n按任意键返回成绩查询\n\n"</span>);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//按姓名查询</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">findname</span><span class="params">(struct Student stu[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">char</span> searchname[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">int</span> searchindex=<span class="number">-1</span>;</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n请输入查询成绩学生的姓名：\n"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,searchname);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)  <span class="comment">//循环寻找姓名</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(searchname,stu[i].name)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            system(<span class="string">"cls"</span>);</span><br><span class="line">            searchindex=i;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"************************************************************************************************************\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\t班级\t姓名\t学号\t\t高数\t英语\tC语言\t计算机基础\t软件工程导论\t平均成绩\t\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"************************************************************************************************************\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\t%-8s%-8s%-16lld%-8.2lf%-8.2lf%-8.2lf%-16.2lf%-16.2lf%-12.2lf\n\n"</span>,stu[i].cla,stu[i].name,stu[i].num,</span><br><span class="line">                   stu[i].score[<span class="number">0</span>],stu[i].score[<span class="number">1</span>],stu[i].score[<span class="number">2</span>],stu[i].score[<span class="number">3</span>],stu[i].score[<span class="number">4</span>],stu[i].aver);</span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">//找到跳出</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(searchindex==<span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n很抱歉，没有找到该学生的姓名！\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n按任意键返回成绩查询\n\n"</span>);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//成绩查询</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(struct Student stu[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(count==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\n您尚未录入学生信息，请返回菜单进行录入！\n\n"</span>);</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> choose;</span><br><span class="line">    system(<span class="string">"cls"</span>);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    choose:   <span class="comment">//成绩查询页面菜单</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t\t\t  成绩查询\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t*****************************\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t |1.按学号查找 2.按姓名查找|\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t |3.全部显示   4.返回菜单  |\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t*****************************\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\n请输入查询方式:"</span>);</span><br><span class="line">    a:</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choose)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"输入格式有误，请您重新输入："</span>);</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span>(choose)</span><br><span class="line">    &#123;</span><br><span class="line">	    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">	        findnum(p);</span><br><span class="line">	        system(<span class="string">"cls"</span>);</span><br><span class="line">	        <span class="keyword">goto</span> choose;</span><br><span class="line">	        <span class="keyword">break</span>;</span><br><span class="line">	    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">	        findname(p);</span><br><span class="line">	        system(<span class="string">"cls"</span>);</span><br><span class="line">	        <span class="keyword">goto</span> choose;</span><br><span class="line">	        <span class="keyword">break</span>;</span><br><span class="line">	    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">	        <span class="built_in">print</span>(p);</span><br><span class="line">	        system(<span class="string">"cls"</span>);</span><br><span class="line">	        <span class="keyword">goto</span> choose;</span><br><span class="line">	        <span class="keyword">break</span>;</span><br><span class="line">	    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">	        <span class="built_in">printf</span>(<span class="string">"\n按任意键返回菜单！\n\n"</span>);</span><br><span class="line">	        system(<span class="string">"pause"</span>);</span><br><span class="line">	        <span class="keyword">return</span>;</span><br><span class="line">	    <span class="keyword">default</span>:</span><br><span class="line">	        <span class="built_in">printf</span>(<span class="string">"没有该序号，请您重新输入："</span>);<span class="keyword">goto</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="4-5成绩修改"><a href="#4-5成绩修改" class="headerlink" title="4.5成绩修改"></a>4.5成绩修改</h2><blockquote>
<p>该功能与录入成绩功能相似，成绩修改是对结构体中的信息进行修改，首先找到需要修改同学结构体的下标值，然后对该下标值对应的信息进行覆盖修改，该信息修改的录入与成绩录入功能的录入相同，同样需要注意与成绩录入时的漏洞。过多的不说了，直接上代码，依据我的需求，代码较多，仅供参考</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">******************************</span><br><span class="line"><span class="comment">//修改成绩</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(struct Student stu[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(struct Student stu[])</span></span>;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">int</span> choose;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> searchnum,tempnum;</span><br><span class="line">    <span class="keyword">int</span> searchindex=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(count==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\n您尚未录入学生信息，请返回菜单进行录入！\n\n"</span>);</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    a:</span><br><span class="line">    system(<span class="string">"cls"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n修改成绩！\n\n"</span>);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"************************************************\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n请输入修改学生的学号：(按-1返回菜单）"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;searchnum);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span>(searchnum==<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n按任意键返回菜单！\n\n"</span>);</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"cls"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(searchnum==stu[i].num)</span><br><span class="line">        &#123;</span><br><span class="line">            searchindex=i;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n该学生信息：\n"</span>);  <span class="comment">//修改成绩页面菜单</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"************************************************************************************************************\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\t班级\t姓名\t学号\t\t高数\t英语\tC语言\t计算机基础\t软件工程导论\t平均成绩\t\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"************************************************************************************************************\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\t%-8s%-8s%-16lld%-8.2lf%-8.2lf%-8.2lf%-16.2lf%-16.2lf%-12.2lf\n\n"</span>,stu[i].cla,stu[i].name,stu[i].num,</span><br><span class="line">                   stu[i].score[<span class="number">0</span>],stu[i].score[<span class="number">1</span>],stu[i].score[<span class="number">2</span>],stu[i].score[<span class="number">3</span>],stu[i].score[<span class="number">4</span>],stu[i].aver);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"************************************************\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"|1.修改班级\t       2. 修改姓名            |\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"|3.修改学号\t       4. 修改高数            |\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"|5.修改英语\t       6. 修改C语言           |\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"|7.修改计算机基础      8. 修改软件工程导论    |\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"|9.返回菜单\t                              |\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"************************************************\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"请选择修改的信息："</span>);</span><br><span class="line">            choose:</span><br><span class="line">            <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choose)==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"输入格式有误，请您重新输入："</span>);</span><br><span class="line">                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">switch</span>(choose)</span><br><span class="line">            &#123;</span><br><span class="line">	            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">	                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                <span class="built_in">printf</span>(<span class="string">"请修改班级:"</span>);</span><br><span class="line">	                <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,stu[i].cla)==<span class="number">0</span>)</span><br><span class="line">	                &#123;</span><br><span class="line">	                    <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">	                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                &#125;</span><br><span class="line">	                <span class="keyword">while</span>(<span class="built_in">strlen</span>(stu[count].cla)&gt;<span class="number">10</span>)  <span class="comment">//判断字符长度</span></span><br><span class="line">	                &#123;</span><br><span class="line">	                    <span class="built_in">printf</span>(<span class="string">"班级输入不合理，请重新录入:"</span>);</span><br><span class="line">	                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,stu[count].cla);</span><br><span class="line">	                &#125;</span><br><span class="line">	                <span class="keyword">break</span>;</span><br><span class="line">	            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">	                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                <span class="built_in">printf</span>(<span class="string">"请修改姓名:"</span>);</span><br><span class="line">	                <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,stu[i].name)==<span class="number">0</span>)</span><br><span class="line">	                &#123;</span><br><span class="line">	                    <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">	                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                &#125;</span><br><span class="line">	                <span class="keyword">while</span>(<span class="built_in">strlen</span>(stu[count].name)&gt;<span class="number">10</span>)  <span class="comment">//判断字符长度</span></span><br><span class="line">	                &#123;</span><br><span class="line">	                    <span class="built_in">printf</span>(<span class="string">"班级输入不合理，请重新录入:"</span>);</span><br><span class="line">	                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,stu[count].name);</span><br><span class="line">	                &#125;</span><br><span class="line">	                <span class="keyword">break</span>;</span><br><span class="line">	            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">	                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                <span class="built_in">printf</span>(<span class="string">"请修改学号:"</span>);</span><br><span class="line">	                w:</span><br><span class="line">	                <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;stu[i].num)==<span class="number">0</span>)</span><br><span class="line">	                &#123;</span><br><span class="line">	                    <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">	                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                &#125;</span><br><span class="line">	                tempnum=stu[i].num;</span><br><span class="line">	                stu[i].num=<span class="number">0</span>;</span><br><span class="line">	                <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;count;j++)</span><br><span class="line">	                &#123;</span><br><span class="line">	                    <span class="keyword">if</span>(tempnum==stu[j].num)</span><br><span class="line">	                    &#123;</span><br><span class="line">	                        <span class="built_in">printf</span>(<span class="string">"已有该学号，请重新输入：\n"</span>);</span><br><span class="line">	                        <span class="keyword">goto</span> w;</span><br><span class="line">	                    &#125;</span><br><span class="line">	                &#125;</span><br><span class="line">	                stu[i].num=tempnum;</span><br><span class="line">	                <span class="keyword">break</span>;</span><br><span class="line">	            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">	                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                <span class="built_in">printf</span>(<span class="string">"请修改高数:"</span>);</span><br><span class="line">	                <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[i].score[<span class="number">0</span>])==<span class="number">0</span>)</span><br><span class="line">	                &#123;</span><br><span class="line">	                    <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">	                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                &#125;</span><br><span class="line">	                <span class="keyword">while</span>(stu[i].score[<span class="number">0</span>]&lt;<span class="number">0</span>||stu[i].score[<span class="number">0</span>]&gt;<span class="number">100</span>)</span><br><span class="line">	                &#123;</span><br><span class="line">	                    <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">	                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                    <span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[i].score[<span class="number">0</span>]);</span><br><span class="line">	                &#125;</span><br><span class="line">	                <span class="keyword">break</span>;</span><br><span class="line">	            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">	                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                <span class="built_in">printf</span>(<span class="string">"请修改英语:"</span>);</span><br><span class="line">	                <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[i].score[<span class="number">1</span>])==<span class="number">0</span>)</span><br><span class="line">	                &#123;</span><br><span class="line">	                    <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">	                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                &#125;</span><br><span class="line">	                <span class="keyword">while</span>(stu[i].score[<span class="number">1</span>]&lt;<span class="number">0</span>||stu[i].score[<span class="number">1</span>]&gt;<span class="number">100</span>)</span><br><span class="line">	                &#123;</span><br><span class="line">	                    <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">	                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                    <span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[i].score[<span class="number">1</span>]);</span><br><span class="line">	                &#125;</span><br><span class="line">	                <span class="keyword">break</span>;</span><br><span class="line">	            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">	                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                <span class="built_in">printf</span>(<span class="string">"请修改C语言:"</span>);</span><br><span class="line">	                <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[i].score[<span class="number">2</span>])==<span class="number">0</span>)</span><br><span class="line">	                &#123;</span><br><span class="line">	                    <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">	                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                &#125;</span><br><span class="line">	                <span class="keyword">while</span>(stu[i].score[<span class="number">2</span>]&lt;<span class="number">0</span>||stu[i].score[<span class="number">2</span>]&gt;<span class="number">100</span>)</span><br><span class="line">	                &#123;</span><br><span class="line">	                    <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">	                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                    <span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[i].score[<span class="number">2</span>]);</span><br><span class="line">	                &#125;</span><br><span class="line">	                <span class="keyword">break</span>;</span><br><span class="line">	            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">	                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                <span class="built_in">printf</span>(<span class="string">"请修改计算机基础:"</span>);</span><br><span class="line">	                <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[i].score[<span class="number">3</span>])==<span class="number">0</span>)</span><br><span class="line">	                &#123;</span><br><span class="line">	                    <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">	                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                &#125;</span><br><span class="line">	                <span class="keyword">while</span>(stu[i].score[<span class="number">3</span>]&lt;<span class="number">0</span>||stu[i].score[<span class="number">3</span>]&gt;<span class="number">100</span>)</span><br><span class="line">	                &#123;</span><br><span class="line">	                    <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">	                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                    <span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[i].score[<span class="number">3</span>]);</span><br><span class="line">	                &#125;</span><br><span class="line">	                <span class="keyword">break</span>;</span><br><span class="line">	            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">	                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                <span class="built_in">printf</span>(<span class="string">"请修改软件工程导论:"</span>);</span><br><span class="line">	                <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[i].score[<span class="number">4</span>])==<span class="number">0</span>)</span><br><span class="line">	                &#123;</span><br><span class="line">	                    <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">	                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                &#125;</span><br><span class="line">	                <span class="keyword">while</span>(stu[i].score[<span class="number">4</span>]&lt;<span class="number">0</span>||stu[i].score[<span class="number">4</span>]&gt;<span class="number">100</span>)</span><br><span class="line">	                &#123;</span><br><span class="line">	                    <span class="built_in">printf</span>(<span class="string">"格式有误，请重新输入："</span>);</span><br><span class="line">	                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	                    <span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;stu[i].score[<span class="number">4</span>]);</span><br><span class="line">	                &#125;</span><br><span class="line">	                <span class="keyword">break</span>;</span><br><span class="line">	            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">	                <span class="built_in">printf</span>(<span class="string">"\n按任意键返回菜单！\n\n"</span>);</span><br><span class="line">	                save(p);</span><br><span class="line">	                <span class="keyword">return</span>;</span><br><span class="line">	            <span class="keyword">default</span>:</span><br><span class="line">	                <span class="built_in">printf</span>(<span class="string">"没有该序号，请您重新输入："</span>);</span><br><span class="line">	                <span class="keyword">goto</span> choose;</span><br><span class="line">            &#125;<span class="comment">//switch结尾处 </span></span><br><span class="line">            stu[i].aver=(stu[i].score[<span class="number">0</span>]+stu[i].score[<span class="number">1</span>]+stu[i].score[<span class="number">2</span>]+stu[i].score[<span class="number">3</span>]+stu[i].score[<span class="number">4</span>])/<span class="number">5.0</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n修改成功：\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"************************************************************************************************************\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\t班级\t姓名\t学号\t\t高数\t英语\tC语言\t计算机基础\t软件工程导论\t平均成绩\t\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"************************************************************************************************************\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\t%-8s%-8s%-16lld%-8.2lf%-8.2lf%-8.2lf%-16.2lf%-16.2lf%-12.2lf\n\n"</span>,stu[i].cla,stu[i].name,stu[i].num,</span><br><span class="line">                   stu[i].score[<span class="number">0</span>],stu[i].score[<span class="number">1</span>],stu[i].score[<span class="number">2</span>],stu[i].score[<span class="number">3</span>],stu[i].score[<span class="number">4</span>],stu[i].aver);</span><br><span class="line">        &#125;<span class="comment">//if结束处</span></span><br><span class="line">    &#125;<span class="comment">//for结束处</span></span><br><span class="line">    <span class="keyword">if</span>(searchindex==<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n很抱歉，未能找到该学生，请重新输入学号!\n\n"</span>);</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        <span class="keyword">goto</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    save(p);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-6成绩删除"><a href="#4-6成绩删除" class="headerlink" title="4.6成绩删除"></a>4.6成绩删除</h2><blockquote>
<p>设计思想:<br>删除成绩是对结构体中的信息进行删除，其实对于C语言无法进行删除本身的意义，只是做出了一些假像，其实删除成绩就是覆盖成绩。删除成绩分为按学号删除和按姓名删除。删除成绩的思想为覆盖，首先通过结构体的遍历找到所删学生信息的下标值，然<br>后从该下标值开始，后面一个学生信息覆盖前面一个学生的信息，最后最关键的一点是将全局变量count即结构体组数-1</p>
</blockquote>
<blockquote>
<p>流程图如下：</p>
<p><img src="https://img-blog.csdnimg.cn/20190328135432241.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzUzMzUzOA==,size_16,color_FFFFFF,t_70" alt="delete"><br>代码如下：</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//删除成绩</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(struct Student stu[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delnum</span><span class="params">(struct Student stu[])</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delname</span><span class="params">(struct Student stu[])</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(struct Student stu[])</span></span>;</span><br><span class="line">    <span class="keyword">int</span> choose;</span><br><span class="line">    <span class="keyword">if</span>(count==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\n您尚未录入学生信息，请返回菜单进行录入！\n\n"</span>);</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    choose:</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);   <span class="comment">//删除成绩页面菜单</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t\t     删除成绩\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t********************************\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" \t\t\t\t\t   1.按学号删除\n\n\t\t\t\t\t   2.按姓名删除\n\n\t\t\t\t\t   3.返回菜单\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t********************************\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入删除方式："</span>);</span><br><span class="line">    a:</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choose)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"输入格式有误，请您重新输入："</span>);</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span>(choose)</span><br><span class="line">    &#123;</span><br><span class="line">	    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">	        delnum(p);</span><br><span class="line">	        save(p);</span><br><span class="line">	        system(<span class="string">"cls"</span>);</span><br><span class="line">	        <span class="keyword">goto</span> choose;</span><br><span class="line">	        <span class="keyword">break</span>;</span><br><span class="line">	    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">	        delname(p);</span><br><span class="line">	        save(p);</span><br><span class="line">	        system(<span class="string">"cls"</span>);</span><br><span class="line">	        <span class="keyword">goto</span> choose;</span><br><span class="line">	        <span class="keyword">break</span>;</span><br><span class="line">	    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">	        <span class="built_in">printf</span>(<span class="string">"\n按任意键返回菜单！\n\n"</span>);</span><br><span class="line">	        system(<span class="string">"pause"</span>);</span><br><span class="line">	        <span class="keyword">return</span>;</span><br><span class="line">	    <span class="keyword">default</span>:</span><br><span class="line">	        <span class="built_in">printf</span>(<span class="string">"没有该序号，请您重新输入："</span>);<span class="keyword">goto</span> a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//按学号删除成绩</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delnum</span><span class="params">(struct Student stu[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(struct Student stu[])</span></span>;</span><br><span class="line">    <span class="keyword">int</span> i,choose;</span><br><span class="line">    <span class="keyword">int</span> searchindex=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> deletenum;</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入要删除学生的学号(按-1返回）："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;deletenum);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"是否确定删除：\n"</span>);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1.是 2.否\n"</span>);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请选择:"</span>);</span><br><span class="line">    b:</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choose)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    	<span class="built_in">printf</span>(<span class="string">"您输入的格式错误，请重新输入：\n"</span>);</span><br><span class="line">    	fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    	<span class="keyword">goto</span> b;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="keyword">switch</span>(choose)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:<span class="keyword">return</span>;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:<span class="built_in">printf</span>(<span class="string">"没有该序号，请重新输入："</span>);<span class="keyword">goto</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(deletenum==<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n按任意键返回删除成绩！\n\n"</span>);</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(deletenum==stu[i].num)</span><br><span class="line">        &#123;</span><br><span class="line">            searchindex=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(searchindex==<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n很遗憾，未能找到所要删除学生的学号！\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n按任意键返回菜单\n\n"</span>);</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>  <span class="comment">//查找信息后，每组数据往前进行覆盖</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=searchindex;i&lt;count<span class="number">-1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">strcpy</span>(stu[i].cla,stu[i+<span class="number">1</span>].cla);</span><br><span class="line">            stu[i].num=stu[i+<span class="number">1</span>].num;</span><br><span class="line">            <span class="built_in">strcpy</span>(stu[i].name,stu[i+<span class="number">1</span>].name);</span><br><span class="line">            stu[i].score[<span class="number">0</span>]=stu[i+<span class="number">1</span>].score[<span class="number">0</span>];</span><br><span class="line">            stu[i].score[<span class="number">1</span>]=stu[i+<span class="number">1</span>].score[<span class="number">1</span>];</span><br><span class="line">            stu[i].score[<span class="number">2</span>]=stu[i+<span class="number">1</span>].score[<span class="number">2</span>];</span><br><span class="line">            stu[i].score[<span class="number">3</span>]=stu[i+<span class="number">1</span>].score[<span class="number">3</span>];</span><br><span class="line">            stu[i].score[<span class="number">4</span>]=stu[i+<span class="number">1</span>].score[<span class="number">4</span>];</span><br><span class="line">            stu[i].aver=stu[i+<span class="number">1</span>].aver;</span><br><span class="line">        &#125;</span><br><span class="line">        count--;  <span class="comment">//总数据组-1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(count==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n目前没有学生信息，请返回菜单录入!\n\n"</span>);</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"cls"</span>);  <span class="comment">//删除后进行打印</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n删除成功！\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"************************************************************************************************************\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t班级\t姓名\t学号\t\t高数\t英语\tC语言\t计算机基础\t软件工程导论\t平均成绩\t\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"************************************************************************************************************\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">"\t%-8s%-8s%-16lld%-8.2lf%-8.2lf%-8.2lf%-16.2lf%-16.2lf%-12.2lf\n"</span>,stu[i].cla,stu[i].name,stu[i].num,</span><br><span class="line">                   stu[i].score[<span class="number">0</span>],stu[i].score[<span class="number">1</span>],stu[i].score[<span class="number">2</span>],stu[i].score[<span class="number">3</span>],stu[i].score[<span class="number">4</span>],stu[i].aver);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n按任意键返回菜单\n\n"</span>);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//按姓名删除成绩</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delname</span><span class="params">(struct Student stu[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(struct Student stu[])</span></span>;</span><br><span class="line">    <span class="keyword">int</span> i,choose;</span><br><span class="line">    <span class="keyword">char</span> tempname[<span class="number">10</span>]=&#123;<span class="string">"-1"</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> searchindex=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">char</span> deletename[<span class="number">20</span>];</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入要删除学生的姓名（按-1返回）："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,deletename);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"是否确定删除：\n"</span>);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1.是 2.否\n"</span>);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请选择:"</span>);</span><br><span class="line">    b:</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choose)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    	<span class="built_in">printf</span>(<span class="string">"您输入的格式错误，请重新输入：\n"</span>);</span><br><span class="line">    	fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    	<span class="keyword">goto</span> b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">switch</span>(choose)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:<span class="keyword">return</span>;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:<span class="built_in">printf</span>(<span class="string">"没有该序号，请重新输入："</span>);<span class="keyword">goto</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strcmp</span>(deletename,tempname)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n按任意键返回删除成绩！\n\n"</span>);</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(deletename,stu[i].name)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            searchindex=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(searchindex==<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n很遗憾，未能找到所要删除学生的姓名！\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n按任意键返回菜单\n\n"</span>);</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=searchindex;i&lt;count<span class="number">-1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">strcpy</span>(stu[i].cla,stu[i+<span class="number">1</span>].cla);</span><br><span class="line">            stu[i].num=stu[i+<span class="number">1</span>].num;</span><br><span class="line">            <span class="built_in">strcpy</span>(stu[i].name,stu[i+<span class="number">1</span>].name);</span><br><span class="line">            stu[i].score[<span class="number">0</span>]=stu[i+<span class="number">1</span>].score[<span class="number">0</span>];</span><br><span class="line">            stu[i].score[<span class="number">1</span>]=stu[i+<span class="number">1</span>].score[<span class="number">1</span>];</span><br><span class="line">            stu[i].score[<span class="number">2</span>]=stu[i+<span class="number">1</span>].score[<span class="number">2</span>];</span><br><span class="line">            stu[i].score[<span class="number">3</span>]=stu[i+<span class="number">1</span>].score[<span class="number">3</span>];</span><br><span class="line">            stu[i].score[<span class="number">4</span>]=stu[i+<span class="number">1</span>].score[<span class="number">4</span>];</span><br><span class="line">            stu[i].aver=stu[i+<span class="number">1</span>].aver;</span><br><span class="line">        &#125;</span><br><span class="line">        count--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n删除成功！\n\n"</span>);</span><br><span class="line">    <span class="keyword">if</span>(count==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n目前没有学生信息，请返回菜单录入!\n\n"</span>);</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"cls"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n删除成功！\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"************************************************************************************************************\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t班级\t姓名\t学号\t\t高数\t英语\tC语言\t计算机基础\t软件工程导论\t平均成绩\t\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"************************************************************************************************************\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\t%-8s%-8s%-16lld%-8.2lf%-8.2lf%-8.2lf%-16.2lf%-16.2lf%-12.2lf\n"</span>,stu[i].cla,stu[i].name,stu[i].num,</span><br><span class="line">                   stu[i].score[<span class="number">0</span>],stu[i].score[<span class="number">1</span>],stu[i].score[<span class="number">2</span>],stu[i].score[<span class="number">3</span>],stu[i].score[<span class="number">4</span>],stu[i].aver);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n按任意键返回菜单\n\n"</span>);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>核心代码如下，请好好理解</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(deletenum==stu[i].num)</span><br><span class="line">     &#123;</span><br><span class="line">          searchindex=i;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line"> &#125;</span><br><span class="line">  <span class="comment">//查找信息后，每组数据往前进行覆盖</span></span><br><span class="line"> <span class="keyword">for</span>(i=searchindex;i&lt;count<span class="number">-1</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">         <span class="built_in">strcpy</span>(stu[i].cla,stu[i+<span class="number">1</span>].cla);</span><br><span class="line">         stu[i].num=stu[i+<span class="number">1</span>].num;</span><br><span class="line">         <span class="built_in">strcpy</span>(stu[i].name,stu[i+<span class="number">1</span>].name);</span><br><span class="line">         stu[i].score[<span class="number">0</span>]=stu[i+<span class="number">1</span>].score[<span class="number">0</span>];</span><br><span class="line">         stu[i].score[<span class="number">1</span>]=stu[i+<span class="number">1</span>].score[<span class="number">1</span>];</span><br><span class="line">         stu[i].score[<span class="number">2</span>]=stu[i+<span class="number">1</span>].score[<span class="number">2</span>];</span><br><span class="line">         stu[i].score[<span class="number">3</span>]=stu[i+<span class="number">1</span>].score[<span class="number">3</span>];</span><br><span class="line">         stu[i].score[<span class="number">4</span>]=stu[i+<span class="number">1</span>].score[<span class="number">4</span>];</span><br><span class="line">         stu[i].aver=stu[i+<span class="number">1</span>].aver;</span><br><span class="line">    &#125;</span><br><span class="line">    count--;  <span class="comment">//总数据组数-1</span></span><br></pre></td></tr></table></figure>

<h2 id="4-7文件保存"><a href="#4-7文件保存" class="headerlink" title="4.7文件保存"></a>4.7文件保存</h2><blockquote>
<p>文件存储简要介绍：</p>
<p>文件存储是将程序中的数据存储如磁盘中，生成文件。在我们没有进行保存之前，我们每次进入系统都要进行录入，如果数据很多，那么操作十分复杂。所有我们需要对数据进行存储。然后进入系统时进行导入，文件的存储分为两种方法，一种是十进制进行存储，另一种是二进制进行存储。这两种方式都可以对数据进行存储，但每种方式都有其的优点和缺点，对于第一种十进制存储，用fprintf函数对磁盘写入，它的优点是格式化输出，在磁盘中可查看数据，也可进行修改使用方便，容易理解，缺点是由于在输入时要将文件中的ASCII码转换为二进制形式在保存在内存变量中，在输出时又要将内存的二进制形式转换成字符，要花费较多时间。并且数据可被其他人查看和修改，在保存数据时需要进行进制转换，可能会造成数据错误。对于二进制存储，用fwrite函数对磁盘文件进行写，优点是fwrite函数可向文件写一个数据块，在读写时以二进制形式进行的。在向磁盘写数据时，直接将内存中一组数据原封不动、不加转换地复制到磁盘文件上，不需要进制转换，运行速度高。其缺点是生成二进制文件，信息是一堆乱码，但是该文件安全系数高，他人无法查看文件内容，对文件数据进行保护。</p>
</blockquote>
<blockquote>
<p>我的文件是使用二进制存储<br>具体代码如下:</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(struct Student stu[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    FILE*fp;</span><br><span class="line">    fp=fopen(<span class="string">"student.bat"</span>,<span class="string">"wb"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(fwrite(&amp;stu[i],<span class="keyword">sizeof</span>(struct Student),<span class="number">1</span>,fp)!=<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"file write error\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n已保存至文件中\n\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>鉴于有些人使用十进制文件，我这里也写了，代码如下：</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">FILE *fp;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">if</span>((fp=fopen(<span class="string">"student.txt"</span>,<span class="string">"w"</span>))==<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">	 <span class="built_in">printf</span>(<span class="string">"error"</span>);</span><br><span class="line">	<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line"><span class="built_in">fprintf</span>(fp,<span class="string">"\t%-8s%-8s%-16lld%-8.2lf%-8.2lf%-8.2lf%-16.2lf%-16.2lf%-12.2lf\n"</span>,stu[i].cla,stu[i].name,stu[i].num,stu[i].score[<span class="number">0</span>],stu[i].score[<span class="number">1</span>],stu[i].score[<span class="number">2</span>],stu[i].score[<span class="number">3</span>],stu[i].score[<span class="number">4</span>],stu[i].aver);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"save success!\n"</span>);</span><br><span class="line">fclose(fp);</span><br></pre></td></tr></table></figure>

<h2 id="4-7文件保存-1"><a href="#4-7文件保存-1" class="headerlink" title="4.7文件保存"></a>4.7文件保存</h2><blockquote>
<p>简要概述<br>文件导入是对磁盘中的数据导入进学生管理系统的结构体中，对数据进行使用。文件导入是与文件存储相对应，十进制导入对应十进制存储，二进制导入对应二进制存储。因此文件导入也分为两种，十进制导入用fscanf，二进制文件导入用fread</p>
</blockquote>
<blockquote>
<p>这里同样展示两种方式<br>首先是二进制</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//文件导入</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(struct Student stu[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    FILE*fp;</span><br><span class="line">    <span class="keyword">if</span>((fp=fopen(<span class="string">"student.bat"</span>,<span class="string">"rb"</span>))==<span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">1000</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(fread(&amp;stu[i],<span class="keyword">sizeof</span>(struct Student),<span class="number">1</span>,fp)!=<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(feof(fp))</span><br><span class="line">            &#123;</span><br><span class="line">                fclose(fp);</span><br><span class="line">                <span class="keyword">goto</span> a;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"file read error\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        count++;  <span class="comment">//存入一个，数据组数+1</span></span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    a:</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n导入文件已成功，祝您使用愉快！\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请按任意键进入页面菜单！\n\n"</span>);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>二进制形式</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(num!=EOF)&#123;</span><br><span class="line">		   num=<span class="built_in">fscanf</span>(fp,<span class="string">"%s %s %lld %f %f %f %f %f %f\n"</span>,stu[i].cla,stu[i].name,stu[i].num,</span><br><span class="line">                 stu[i].score[<span class="number">0</span>],stu[i].score[<span class="number">1</span>],stu[i].score[<span class="number">2</span>],stu[i].score[<span class="number">3</span>],stu[i].score[<span class="number">4</span>],stu[i].aver);</span><br><span class="line">		    count++;  <span class="comment">//存入一个，数据组数+1</span></span><br><span class="line">&#125;</span><br><span class="line">	count--;</span><br></pre></td></tr></table></figure>

<h2 id="4-8主函数代码"><a href="#4-8主函数代码" class="headerlink" title="4.8主函数代码"></a>4.8主函数代码</h2><blockquote>
<p>主函数代码展示</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//*************************************</span></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    system(<span class="string">"color 9E"</span>); <span class="comment">//设置背景颜色</span></span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">char</span> code[<span class="number">20</span>]=&#123;<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>&#125;,password[<span class="number">20</span>];</span><br><span class="line">	<span class="keyword">int</span> x;</span><br><span class="line">	<span class="keyword">char</span> c;</span><br><span class="line">    <span class="comment">//初始页面</span></span><br><span class="line">    <span class="keyword">time_t</span> timep;    <span class="comment">//系统时间 </span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">tm</span> *<span class="title">p_1</span>;</span></span><br><span class="line">	time (&amp;timep);</span><br><span class="line">	p_1=gmtime(&amp;timep);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t  当前时间%02d时%02d分%\n"</span>,<span class="number">8</span>+p_1-&gt;tm_hour,p_1-&gt;tm_min); </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t   %d年%02d月%02d日\n"</span>,<span class="number">1900</span>+p_1-&gt;tm_year,<span class="number">1</span>+p_1-&gt;tm_mon,p_1-&gt;tm_mday);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t★\t\t\t\t\t有朋自远方来，不亦乐乎！ \t\t\t\t\t★\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t★\t\t\t*****************************************************\t\t\t\t★\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t★\t\t\t\t\t 学 生 管 理 系 统\t\t\t\t\t\t★\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t★\t\t\t  制作者:Mr.Wang 专业:软件工程1801 学号:************\t\t\t\t★\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t★\t\t\t*****************************************************\t\t\t\t★\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t★\t\t\t  欢迎使用软件工程18-01的学生管理系统,祝您使用愉快! \t\t\t\t★\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★\n\n"</span>); </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"请输入六位登陆密码！\n"</span>);</span><br><span class="line">	q:</span><br><span class="line">	x=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(x&lt;<span class="number">6</span> &amp;&amp; c!=<span class="number">13</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		c=getch();</span><br><span class="line">		<span class="keyword">if</span>(c!=<span class="number">13</span>)</span><br><span class="line">		<span class="built_in">putchar</span>(<span class="string">'*'</span>);</span><br><span class="line">		password[x++]=c;</span><br><span class="line">	&#125;</span><br><span class="line">	password[x]=<span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strcmp</span>(password,code)!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    	fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n输入密码有误，您还有%d次机会，请重新输入："</span>,i--);</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">goto</span> q;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">read</span>(p); <span class="comment">//导入文件</span></span><br><span class="line">    system(<span class="string">"cls"</span>);    <span class="comment">//清屏</span></span><br><span class="line">    <span class="comment">//页面菜单</span></span><br><span class="line">    menu:</span><br><span class="line">    system(<span class="string">"cls"</span>);</span><br><span class="line">    time (&amp;timep);</span><br><span class="line">	p_1=gmtime(&amp;timep);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t   当前时间%02d时%02d分%\n"</span>,<span class="number">8</span>+p_1-&gt;tm_hour,p_1-&gt;tm_min); </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t    %d年%02d月%02d日\n"</span>,<span class="number">1900</span>+p_1-&gt;tm_year,<span class="number">1</span>+p_1-&gt;tm_mon,p_1-&gt;tm_mday);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t    页  面  菜  单\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t★————————————————————————————————————————★\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t   | 1. 成绩录入\t\t2. 成绩显示\t\t3. 各科均分  |\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t   | 4. 成绩排序\t\t5. 成绩查找\t\t6. 信息修改  |\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t   | 7. 删除成绩\t\t8. 成绩分段\t\t0. 退出系统  |\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t★————————————————————————————————————————★\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t          * \n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t         *** \n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t        ***** \n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t       *******\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t      *********\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t     *********** \n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t ********************\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t  ******************\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t   ******* ********\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t  *******   ********\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t ******       *******\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t\t******          ******\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请选择相应序号："</span>);</span><br><span class="line">    <span class="keyword">int</span> choose;</span><br><span class="line">    <span class="keyword">int</span> a; </span><br><span class="line">    w:</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choose)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"格式错误，请重新输入："</span>);</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span>(choose)</span><br><span class="line">    &#123;</span><br><span class="line">    	<span class="keyword">case</span> <span class="number">1</span>:   <span class="comment">//成绩录入</span></span><br><span class="line">	        system(<span class="string">"cls"</span>);</span><br><span class="line">	        <span class="built_in">printf</span>(<span class="string">"学生成绩录入\n"</span>);</span><br><span class="line">	        input(p);</span><br><span class="line">	        <span class="keyword">goto</span> menu;</span><br><span class="line">	    <span class="keyword">case</span> <span class="number">2</span>:  <span class="comment">//成绩显示和排序</span></span><br><span class="line">	    	system(<span class="string">"cls"</span>);</span><br><span class="line">	        <span class="built_in">printf</span>(<span class="string">"学生成绩显示\n"</span>);</span><br><span class="line">	        <span class="built_in">print</span>(p);</span><br><span class="line">	        <span class="keyword">goto</span> menu;</span><br><span class="line">	    <span class="keyword">case</span> <span class="number">3</span>:  <span class="comment">//均科成绩 </span></span><br><span class="line">	    	system(<span class="string">"cls"</span>);</span><br><span class="line">			average(p);</span><br><span class="line">			<span class="keyword">goto</span> menu;</span><br><span class="line">	    <span class="keyword">case</span> <span class="number">4</span>:  <span class="comment">//成绩排序</span></span><br><span class="line">	    	 system(<span class="string">"cls"</span>);</span><br><span class="line">	        projectsort(p);</span><br><span class="line">	        <span class="keyword">goto</span> menu;</span><br><span class="line">	    <span class="keyword">case</span> <span class="number">5</span>:  <span class="comment">//成绩查找</span></span><br><span class="line">	        system(<span class="string">"cls"</span>);</span><br><span class="line">	        <span class="built_in">find</span>(p);</span><br><span class="line">	        <span class="keyword">goto</span> menu;</span><br><span class="line">	    <span class="keyword">case</span> <span class="number">6</span>:  <span class="comment">//成绩修改</span></span><br><span class="line">		    system(<span class="string">"cls"</span>);</span><br><span class="line">	        change(p);</span><br><span class="line">	        <span class="keyword">goto</span> menu;</span><br><span class="line">	    <span class="keyword">case</span> <span class="number">7</span>:  <span class="comment">//成绩删除</span></span><br><span class="line">		    system(<span class="string">"cls"</span>);</span><br><span class="line">	        del(p);</span><br><span class="line">	        <span class="keyword">goto</span> menu;</span><br><span class="line">	    <span class="keyword">case</span> <span class="number">8</span>:  <span class="comment">//成绩分段</span></span><br><span class="line">		    system(<span class="string">"cls"</span>);</span><br><span class="line">	        section(p);</span><br><span class="line">	        <span class="keyword">goto</span> menu;</span><br><span class="line">	    <span class="keyword">case</span> <span class="number">0</span>: <span class="comment">//退出系统</span></span><br><span class="line">	        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	        <span class="built_in">printf</span>(<span class="string">"\n是否继续退出：\n"</span>);</span><br><span class="line">	        <span class="built_in">printf</span>(<span class="string">"\n1. 是 2. 否\n\n"</span>);</span><br><span class="line">	        back:</span><br><span class="line">	        <span class="built_in">printf</span>(<span class="string">"请选择:"</span>);</span><br><span class="line">	        <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a)==<span class="number">0</span>)</span><br><span class="line">	        &#123;</span><br><span class="line">	        	fflush(<span class="built_in">stdin</span>);</span><br><span class="line">	        	<span class="built_in">printf</span>(<span class="string">"您输入格式有误，请重新输入："</span>);</span><br><span class="line">			&#125;</span><br><span class="line">	        <span class="keyword">if</span>(a==<span class="number">1</span>)</span><br><span class="line">	        &#123;</span><br><span class="line">	            system(<span class="string">"cls"</span>);</span><br><span class="line">	            <span class="comment">//心形图案 </span></span><br><span class="line">	            <span class="keyword">float</span> y, x, b;</span><br><span class="line">	            <span class="keyword">for</span> (y = <span class="number">1.5f</span>;y &gt; <span class="number">-1.5f</span>;y -= <span class="number">0.1f</span>)</span><br><span class="line">	            &#123;</span><br><span class="line">	                <span class="keyword">for</span> (x = <span class="number">-1.5f</span>;x &lt; <span class="number">1.5f</span>;x += <span class="number">0.05f</span>)</span><br><span class="line">	                &#123;</span><br><span class="line">	                    b = x*x + y*y - <span class="number">1</span>;</span><br><span class="line">	                    <span class="built_in">putchar</span>(b*b*b - x*x*y*y*y &lt;= <span class="number">0.0f</span> ? <span class="string">'*'</span> : <span class="string">' '</span>);</span><br><span class="line">	                &#125;</span><br><span class="line">	                <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">	            &#125;</span><br><span class="line">	            Sleep(<span class="number">1000</span>);  <span class="comment">//休眠 </span></span><br><span class="line">	            <span class="built_in">printf</span>(<span class="string">"欢迎下次继续使用本产品!\n"</span>);</span><br><span class="line">	            <span class="built_in">printf</span>(<span class="string">"正在退出，请稍后."</span>);</span><br><span class="line">	            Sleep(<span class="number">500</span>);</span><br><span class="line">	            <span class="built_in">printf</span>(<span class="string">"."</span>);</span><br><span class="line">	            Sleep(<span class="number">500</span>);</span><br><span class="line">	            <span class="built_in">printf</span>(<span class="string">"."</span>);</span><br><span class="line">	            Sleep(<span class="number">500</span>);</span><br><span class="line">	            <span class="built_in">printf</span>(<span class="string">"."</span>);</span><br><span class="line">	            Sleep(<span class="number">500</span>);</span><br><span class="line">	            <span class="built_in">printf</span>(<span class="string">"."</span>);</span><br><span class="line">	            Sleep(<span class="number">500</span>);</span><br><span class="line">	            <span class="built_in">printf</span>(<span class="string">"."</span>);</span><br><span class="line">	            Sleep(<span class="number">500</span>);</span><br><span class="line">	            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">	        &#125;<span class="comment">//if(a==1)结束处 </span></span><br><span class="line">	        <span class="keyword">if</span>(a==<span class="number">2</span>)<span class="keyword">goto</span> menu;</span><br><span class="line">	        <span class="keyword">if</span>(a!=<span class="number">1</span>||a!=<span class="number">2</span>)<span class="built_in">printf</span>(<span class="string">"输入有误，重新输入:\n"</span>);<span class="keyword">goto</span> back;</span><br><span class="line">	    <span class="keyword">default</span>:</span><br><span class="line">	    	<span class="built_in">printf</span>(<span class="string">"没有该序号！请重新输入："</span>);</span><br><span class="line">        	<span class="keyword">goto</span> w;</span><br><span class="line">	&#125;<span class="comment">//switch结束处 </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="4、效果展示"><a href="#4、效果展示" class="headerlink" title="4、效果展示"></a>4、效果展示</h1><p><img src="https://img-blog.csdnimg.cn/20190328160536752.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzUzMzUzOA==,size_16,color_FFFFFF,t_70" alt="login"><br><img src="https://img-blog.csdnimg.cn/20190328160559954.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzUzMzUzOA==,size_16,color_FFFFFF,t_70" alt="input">)<img src="https://img-blog.csdnimg.cn/20190328160617783.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzUzMzUzOA==,size_16,color_FFFFFF,t_70" alt="printf">)<img src="https://img-blog.csdnimg.cn/20190328160639191.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzUzMzUzOA==,size_16,color_FFFFFF,t_70" alt="sort">)<img src="https://img-blog.csdnimg.cn/2019032816070423.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzUzMzUzOA==,size_16,color_FFFFFF,t_70" alt="change">)<img src="https://img-blog.csdnimg.cn/20190328160715655.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzUzMzUzOA==,size_16,color_FFFFFF,t_70" alt="exit"></p>
<blockquote>
<p>退出时的效果可以自行添加，这里我在csdn上找的时一个心型图案，该图案设计者链接如下：</p>
</blockquote>
<p>(<a href="https://blog.csdn.net/stone15165/article/details/80260580" target="_blank" rel="noopener">https://blog.csdn.net/stone15165/article/details/80260580</a>)</p>
<p>源码在github上：(<a href="https://github.com/Mr00wang/C-language.git" target="_blank" rel="noopener">https://github.com/Mr00wang/C-language.git</a>)<br>以上是该学生管理系统的全部内容，上面没有对各科均分和成绩分段进行展述，如有问题请留言，谢谢！</p>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>项目</tag>
      </tags>
  </entry>
</search>
